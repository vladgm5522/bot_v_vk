console.log('')
console.log('-------------------------------')
console.log('  –°–∫—Ä–∏–ø—Ç Tasmarn Bot –∑–∞–ø—É—â–µ–Ω.')
console.log('  –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: –í–ª–∞–¥ –û—Ä–ª–æ–≤')
console.log('  vk.com/riconc')

console.log('-------------------------------')
console.log('')
console.log('=> Loading 5%\n=> Loading 20%\n=> Loading 50%\n=> Loading 60%\n=> Loading 70%\n=> Loading 100%\n'); 
// –í–°–ï –ù–ê–°–¢–†–û–ô–ö–ò –í –§–ê–ô–õ–ï /database/settings.json! 

const { VK } = require('vk-io');
const vk = new VK();
const commands = [];
const request = require('prequest');



var express = require('express');
var app     = express();

app.set('port', (process.env.PORT || 5000));

//For avoidong Heroku $PORT error
app.get('/', function(request, response) {
    var result = 'App is running'
    response.send(result);
}).listen(app.get('port'), function() {
    console.log('App is running, server is listening on port ', app.get('port'));
});



const food = [
    {
		name: 'no',
		id:0 
	},
	{
		name: '–§–ª—è–≥–∞ —Ç—Ä–∞–≤—è–Ω–æ–≥–æ —á–∞—è (+5—Ö–ø)',
		cost: 10,
		id:1 
	},
	{
		name: '–ñ–∞—Ä–µ–Ω–∞—è —Ä—ã–±–∞ (+10—Ö—Ä)',
		cost: 15,
		id:2 
	},
	{
		name: '–í–∞—Ä–µ–Ω—ã–π –∫–æ—Ä—É—Å (+20—Ö–ø)',
		cost: 25,
		id:3 
	},
	{
		name: '–ñ–∞—Ä–µ–Ω–∞—è —Å–≤–∏–Ω–∏–Ω–∞ (+30—Ö–ø)',
		cost: 35,
		id:4 
	},
];


	
const the_class = [
    {
		name: 'no',
		cost: 0,
		id:0 
	},
    {
		name: '–í–æ–∏–Ω',
		cost: 0,
		id: 1
	},
    {
		name: '–õ—É—á–Ω–∏–∫',
		cost: 0,
		id: 2
	},
    {
		name: '–ú–∞–≥',
		cost: 0,
		id: 3
	},
    {
		name: '–û—Ö–æ—Ç–Ω–∏–∫',
		cost: 0,
		id: 4
	},
];



const horse = [
    {
		name: 'no',
		id: 0
	},
	{
		name: '–ó–µ–±—Ä–∞',
		cost: 500,
		id: 1
	},
	{
		name: '–õ–æ—à–∞–¥—å',
		cost: 2500,
		id: 2
	},
	{
		name: '–ï–¥–∏–Ω–æ—Ä–æ–≥',
		cost: 5000,
		id: 3
	},
	{
		name: '–û–ª–µ–Ω—å',
		cost: 7500,
		id: 4
	},
	{
		name: '–í–æ–ª–∫',
		cost: 25000,
		id: 5
	},
	{
		name: '–õ–µ–≤',
		cost: 50000,
		id: 6
	},
	{
		name: '–¢–∏–≥—Ä',
		cost: 50000,
		id: 6
	}
];

const —Åhariots = [
    {
		name: 'no',
		id: 0
	},
	{
		name: '–£–ø—Ä—è–∂—å —Å –¥–≤—É–º—è –õ–æ—à–∞–¥—å–º–∏',
		cost: 1000,
		id: 1
	},
	{
		name: '–£–ø—Ä—è–∂—å —Å –¥–≤—É–º—è –æ–ª–µ–Ω—è–º–∏',
		cost: 1000,
		id: 2
	},
	{
		name: '–í–æ–ª—á—å—è —É–ø—Ä—è–∂—å',
		cost: 15000,
		id: 3
	}
];

const boat = [
    {
		name: 'no',
		id: 0
	},
	{
		name: '–ë–µ—Ä–µ–∑–æ–≤–∞—è –ª–æ–¥–∫–∞ —Å –≤—ë—Å–ª–∞–º–∏',
		cost: 1000,
		id: 1
	},
	{
		name: '–î—É–±–æ–≤–∞—è –ª–æ–¥–∫–∞ —Å –≤—ë—Å–ª–∞–º–∏',
		cost: 3500,
		id: 2
	},
	{
		name: '–î—É–±–æ–≤–∞—è –ª–æ–¥–∫–∞ —Å –ª–æ–¥–æ—á–Ω–∏–∫–æ–º',
		cost: 7000,
		id: 3
	},
	{
		name: '–ö–æ—Ä–∞–±–ª—å',
		cost: 1000,
		id: 4
	}
];

const helmet = [
    {
		name: 'no',
		id: 0
	},
	{
		name: '–ê–º—É–ª–µ—Ç –∑–∞—â–∏—Ç—ã',
		cost: 2,
		id: 1
	},
	{
		name: '–ê–º—É–ª–µ—Ç –∑–∞—â–∏—Ç—ã',
		cost: 300000,
		id: 2
	},
	{
		name: '–ê–º—É–ª–µ—Ç –∑–¥–æ—Ä–æ–≤—å—è',
		cost: 450000,
		id: 3
	},
	{
		name: '–ê–º—É–ª–µ—Ç –∑–¥–æ—Ä–æ–≤—å—è',
		cost: 1300000,
		id: 4
	}
];

const chestplate = [
    {
		name: 'no',
		id: 0
	},
	{
		name: ' –õ—ë–≥–∫–∞—è –∫–∏—Ä–∞—Å–∞',
		cost: 250,
		id: 1
	},
	{
		name: '–ñ–µ–ª–µ–∑–Ω–∞—è —É–ª—É—á—à–µ–Ω–Ω–∞—è –∫–∏—Ä–∞—Å–∞',
		cost: 3000,
		id: 2
	},
	{
		name: '–ú–∞–≥–∏—á–µ—Å–∫–∏–π –ø–ª–∞—â',
		cost: 3500,
		id: 3
	},
	{
		name: '–ö–∏—Ä–∞—Å–∞ –∏–∑ —á–µ—à—É–∏ –¥—Ä–∞–∫–æ–Ω',
		cost: 5000,
		id: 4
	}
];

const shoulders = [
    {
		name: 'no',
		id: 0
	},
	{
		name: '–ú–∞–≥–∏—á–µ—Å–∫–∏–µ –Ω–∞–ø–ª–µ—á–Ω–∏–∫–∏',
		cost: 15000,
		id: 1
	},
	{
		name: '–ù–∞–ø–ª–µ—á–Ω–∏–∫–∏ –∏–∑ —á–µ—à—É–∏ –¥—Ä–∞–∫–æ–Ω–∞',
		cost: 55000,
		id: 2
	},
	
];

const trouserss = [
    {
		name: 'no',
		id: 0
	},
	{
		name: '–õ—ë–≥–∫–∏–µ —à—Ç–∞–Ω—ã',
		cost: 250,
		id: 1
	},
	{
		name: '–ñ–µ–ª–µ–∑–Ω—ã–µ –ø–æ–Ω–æ–∂–∏',
		cost: 500,
		id: 2
	},
	{
		name: '–ü–æ–Ω–æ–∂–∏ –∏–∑ —á–µ—à—É–∏ –¥—Ä–∞–∫–æ–Ω–∞',
		cost: 2000,
		id: 3
	},
];

const boots = [
    {
		name: 'no',
		id: 0
	},
	{
		name: '–û—Ö–æ—Ç–Ω–∏—á—å–∏ —Å–∞–ø–æ–≥–∏',
		cost: 20,
		id: 1
	},
	{
		name: '–ë–æ—Ç–∏–Ω–∫–∏ –∏–∑ –∫–æ–∂–∏',
		cost: 10,
		id: 2
	},
	{
		name: '–ë–µ—Ä—Ü—ã',
		cost: 9,
		id: 3
	}
];



const farms = [
	{
		name: '6U Nvidia',
		cost: 20500000,
		id: 1
	},
	{
		name: 'AntminerS9',
		cost: 100000000,
		id: 2
	},
	{
		name: 'FM2018-BT200',
		cost: 900000000,
		id: 3
	}
];

const business = [
	[ // –ë–∏–∑–Ω–µ—Å #1
		{ // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –±–∏–∑–Ω–µ—Å
			name: '–®–∞—É—Ä–º–µ—á–Ω–∞—è',
			cost: 50000,
			earn: 200,
			workers: 1,
			id: 1,
			icon: 'ü•ñ'
		},

		{ // –ü–µ—Ä–≤–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ
			name: '5 —à–∞—É—Ä–º–µ—á–Ω—ã—Ö',
			cost: 350000,
			earn: 1000,
			workers: 10,
			id: 1,
			icon: 'ü•ñ'
		},

		{ // –í—Ç–æ—Ä–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ
			name: '–ù–µ–±–æ–ª—å—à–∞—è —Å–µ—Ç—å —à–∞—É—Ä–º–µ—á–Ω—ã—Ö',
			cost: 900000,
			earn: 2625,
			workers: 30,
			id: 1,
			icon: 'ü•ñ'
		},

		{ // 3 —É–ª—É—á—à–µ–Ω–∏–µ
			name: '–°—Ä–µ–¥–Ω—è—è —Å–µ—Ç—å —à–∞—É—Ä–º–µ—á–Ω—ã—Ö',
			cost: 1200000,
			earn: 3750,
			workers: 50,
			id: 1,
			icon: 'ü•ñ'
		},

		{ // –ü–æ—Å–ª–µ–¥–Ω–µ–µ —É–ª—É—á—à–µ–Ω–∏–µ
			name: '–õ—É—á—à–∞—è —à–∞—É—Ä–º–∞ –≤ —Å—Ç—Ä–∞–Ω–µ',
			cost: 4000000,
			earn: 11000,
			workers: 200,
			id: 1,
			icon: 'ü•ñ'
		}
	],

	[
		{
			name: '–õ–∞—Ä—ë–∫',
			cost: 100000,
			earn: 700,
			workers: 1,
			id: 2,
			icon: 'üè™'
		},

		{
			name: '5 –ª–∞—Ä—å–∫–æ–≤',
			cost: 500000,
			earn: 3700,
			workers: 5,
			id: 2,
			icon: 'üè™'
		},

		{
			name: '–°—Ä–µ–¥–Ω—è—è —Å–µ—Ç—å –ª–∞—Ä—å–∫–æ–≤',
			cost: 950000,
			earn: 7725,
			workers: 40,
			id: 2,
			icon: 'üè™'
		},

		{
			name: '–õ–∞—Ä—å–∫–∏ –≤–æ –≤—Å–µ—Ö –≥–æ—Ä–æ–¥–∞—Ö —Å—Ç—Ä–∞–Ω—ã',
			cost: 8000000,
			earn: 37450,
			workers: 150,
			id: 2,
			icon: 'üè™'
		},

		{
			name: '–õ–∞—Ä—å–∫–∏ –≤ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω–µ',
			cost: 17500000,
			earn: 79950,
			workers: 400,
			id: 2,
			icon: 'üè™'
		}
	],

	[
		{
			name: '–ó–∞–±–µ–≥–∞–ª–æ–≤–∫–∞',
			cost: 300000,
			earn: 2700,
			workers: 3,
			id: 3,
			icon: 'üç∑'
		},

		{
			name: '–û–±—â–µ–ø–∏—Ç',
			cost: 450000,
			earn: 4350,
			workers: 7,
			id: 3,
			icon: 'üç∑'
		},

		{
			name: '–†–µ—Å—Ç–æ—Ä–∞–Ω',
			cost: 450000,
			earn: 7400,
			workers: 15,
			id: 3,
			icon: 'üç∑'
		},

		{
			name: '–ù–µ–±–æ–ª—å—à–∞—è —Å–µ—Ç—å —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤',
			cost: 4000000,
			earn: 19900,
			workers: 80,
			id: 3,
			icon: 'üç∑'
		},

		{
			name: '–õ—É—á—à–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã –≤ —Å—Ç—Ä–∞–Ω–µ',
			cost: 11000000,
			earn: 47400,
			workers: 300,
			id: 3,
			icon: 'üç∑'
		}
	],

	[
		{
			name: '–ú–∏–Ω–∏-–º–∞–≥–∞–∑–∏–Ω',
			cost: 500000,
			earn: 4100,
			workers: 15,
			id: 4,
			icon: 'üè´'
		},

		{
			name: '–ú–∞–≥–∞–∑–∏–Ω',
			cost: 1250000,
			earn: 9350,
			workers: 10,
			id: 4,
			icon: 'üè´'
		},

		{
			name: '–°–µ—Ç—å –º–∞–≥–∞–∑–∏–Ω–æ–≤',
			cost: 3000000,
			earn: 23350,
			workers: 70,
			id: 4,
			icon: 'üè´'
		},

		{
			name: '–°–µ—Ç—å —Å—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç–æ–≤',
			cost: 20000000,
			earn: 109850,
			workers: 500,
			id: 4,
			icon: 'üè´'
		}
	],

	[
		{
			name: '–ó–∞–≤–æ–¥ –≤ –≥–∞—Ä–∞–∂–µ',
			cost: 1500000,
			earn: 8800,
			workers: 5,
			id: 5,
			icon: 'üè≠'
		},

		{
			name: '–°—Ä–µ–¥–Ω–∏–π –∑–∞–≤–æ–¥',
			cost: 3500000,
			earn: 13800,
			workers: 20,
			id: 5,
			icon: 'üè≠'
		},

		{
			name: '–°–µ—Ç—å –∑–∞–≤–æ–¥–æ–≤',
			cost: 15000000,
			earn: 60800,
			workers: 200,
			id: 5,
			icon: 'üè≠'
		},

		{
			name: '–ì–ª–∞–≤–Ω—ã–µ –∑–∞–≤–æ–¥—ã —Å—Ç—Ä–∞–Ω—ã',
			cost: 50000000,
			earn: 274800,
			workers: 1000,
			id: 5,
			icon: 'üè≠'
		}
	],

	[
		{
			name: '–£–≥–æ–ª—å–Ω–∞—è —à–∞—Ö—Ç–∞',
			cost: 25000000,
			earn: 84700,
			workers: 50,
			id: 6,
			icon: '‚õè'
		},

		{
			name: '–ó–æ–ª–æ—Ç–∞—è —à–∞—Ö—Ç–∞',
			cost: 50000000,
			earn: 117200,
			workers: 75,
			id: 6,
			icon: '‚õè'
		},

		{
			name: '–ê–ª–º–∞–∑–Ω–∞—è —à–∞—Ö—Ç–∞',
			cost: 60000000,
			earn: 229700,
			workers: 200,
			id: 6,
			icon: '‚õè'
		},

		{
			name: '–ê–ª–º–∞–∑–Ω—ã–π –∫–∞—Ä—å–µ—Ä',
			cost: 90000000,
			earn: 432700,
			workers: 360,
			id: 6,
			icon: '‚õè'
		},

		{
			name: '–ö—Ä—É–ø–Ω–µ–π—à–∏–π –∞–ª–º–∞–∑–Ω—ã–π –∫–∞—Ä—å–µ—Ä',
			cost: 200000000,
			earn: 709700,
			workers: 700,
			id: 6,
			icon: '‚õè'
		}
	],

	[
		{
			name: '–ú–∞–ª–µ–Ω—å–∫–∏–π –æ—Ñ–∏—Å',
			cost: 80000000,
			earn: 229625,
			workers: 10,
			id: 7,
			icon: 'üè¢'
		},

		{
			name: '–°—Ä–µ–¥–Ω–∏–π –æ—Ñ–∏—Å',
			cost: 240000000,
			earn: 329175,
			workers: 60,
			id: 7,
			icon: 'üè¢'
		},

		{
			name: '–ë–æ–ª—å—à–æ–π –æ—Ñ–∏—Å',
			cost: 240000000,
			earn: 614675,
			workers: 200,
			id: 7,
			icon: 'üè¢'
		},

		{
			name: '–û—Ñ–∏—Å-–Ω–µ–±–æ—Å–∫—Ä—ë–±',
			cost: 1000000000,
			earn: 1227275,
			workers: 700,
			id: 7,
			icon: 'üè¢'
		}
	],

	[
		{
			name: '–õ—é–±–∏—Ç–µ–ª—å—Å–∫–∏–π GameDev',
			cost: 150000000,
			earn: 302000,
			workers: 5,
			id: 8,
			icon: 'üïπ'
		},

		{
			name: '–ò–Ω–¥–∏ GameDev',
			cost: 200000000,
			earn: 379500,
			workers: 10,
			id: 8,
			icon: 'üïπ'
		},

		{
			name: 'AA GameDev',
			cost: 750000000,
			earn: 1024500,
			workers: 50,
			id: 8,
			icon: 'üïπ'
		},

		{
			name: 'AAA GameDev',
			cost: 5000000000,
			earn: 6749500,
			workers: 500,
			id: 8,
			icon: 'üïπ'
		}
	],

	[
		{
			name: '–ù–µ—Ñ—Ç–µ–≤—ã—à–∫–∞',
			cost: 500000000,
			earn: 707000,
			workers: 8,
			id: 9,
			icon: 'üèú'
		},

		{
			name: '–ù–µ—Ñ—Ç–µ–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –≤ –º–æ—Ä–µ',
			cost: 750000000,
			earn: 1019000,
			workers: 20,
			id: 9,
			icon: 'üèú'
		},

		{
			name: '–ù–µ—Ñ—Ç–µ–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –≤ –æ–∫–µ–∞–Ω–µ',
			cost: 1250000000,
			earn: 4049000,
			workers: 50,
			id: 9,
			icon: 'üèú'
		},

		{
			name: '5 –Ω–µ—Ñ—Ç–µ–ø–ª–∞—Ç—Ñ–æ—Ä–º –≤ –æ–∫–µ–∞–Ω–µ',
			cost: 5000000000,
			earn: 15249000,
			workers: 250,
			id: 9,
			icon: 'üèú'
		}
	],

	[
		{
			name: '–ú–∏–Ω–∏ –ê–≠–°',
			cost: 800000000,
			earn: 1050700,
			workers: 40,
			id: 10,
			icon: 'üí°'
		},

		{
			name: '–°—Ä–µ–¥–Ω—è—è –ê–≠–°',
			cost: 1200000000,
			earn: 1496200,
			workers: 75,
			id: 10,
			icon: 'üí°'
		},

		{
			name: '–ê–≠–° —Å 5 —ç–Ω–µ—Ä–≥–æ–±–ª–æ–∫–∞–º–∏',
			cost: 4250000000,
			earn: 3088700,
			workers: 300,
			id: 10,
			icon: 'üí°'
		},

		{
			name: '–ö—Ä—É–ø–Ω–µ–π—à–∞—è –ê–≠–°',
			cost: 10000000000,
			earn: 34843700,
			workers: 650,
			id: 10,
			icon: 'üí°'
		}
	],

	[
		{
			name: 'Apple Store',
			cost: 25000000000,
			earn: 250000000,
			workers: 75,
			id: 11,
			icon: 'üó∫'
		},

		{
			name: '–ú–∞–≥–∞–∑–∏–Ω Apple',
			cost: 3000000000000,
			earn: 1000000000,
			workers: 150,
			id: 11,
			icon: 'üó∫'
		},

		{
			name: '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π Apple Store',
			cost: 9000000000000,
			earn: 5000000000,
			workers: 250,
			id: 11,
			icon: 'üó∫'
		},

		{
			name: '–ó–∞–≤–æ–¥ Apple',
			cost: 20000000000000,
			earn: 11000000000,
			workers: 500,
			id: 11,
			icon: 'üó∫'
		},

		{
			name: '–ó–∞–≤–æ–¥—ã Apple –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É',
			cost: 100000000000000,
			earn: 45000000000,
			workers: 1000,
			id: 11,
			icon: 'üó∫'
		},

		{
			name: '–ó–∞–≤–æ–¥—ã Apple –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É',
			cost: 200000000000000,
			earn: 75000000000,
			workers: 1500,
			id: 11,
			icon: 'üó∫'
		}
	]
];

const works = [
	{
		name: '–î–≤–æ—Ä–Ω–∏–∫',
		requiredLevel: 1,
		min: 2000,
		max: 2500,
		id: 1
	},
	{
		name: '–°–∞–Ω—Ç–µ—Ö–Ω–∏–∫',
		requiredLevel: 3,
		min: 3750,
		max: 4000,
		id: 2
	},
	{
		name: '–≠–ª–µ–∫—Ç—Ä–∏–∫',
		requiredLevel: 5,
		min: 4000,
		max: 4500,
		id: 3
	},
	{
		name: '–°–ª–µ—Å–∞—Ä—å',
		requiredLevel: 8,
		min: 5000,
		max: 5500,
		id: 4
	},
	{
		name: '–Æ—Ä–∏—Å—Ç',
		requiredLevel: 10,
		min: 7500,
		max: 8000,
		id: 5
	},
	{
		name: '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä',
		requiredLevel: 14,
		min: 9000,
		max: 9489,
		id: 6
	},
	{
		name: '–ë–∞—Ä–º–µ–Ω',
		requiredLevel: 22,
		min: 10000,
		max: 12500,
		id: 7
	},
	{
		name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
		requiredLevel: 25,
		min: 12500,
		max: 13500,
		id: 8
	},
	{
		name: '–õ–û–• –ò–õ–ò –ë–û–ì–ì–ì–ì–ì–ì–ì',
		requiredLevel: 49,
		min: 16000,
		max: 17500,
		id: 9
	}
];
const utils = {
	sp: (int) => {
		int = int.toString();
		return int.split('').reverse().join('').match(/[0-9]{1,3}/g).join('.').split('').reverse().join('');
	},
	rn: (int, fixed) => {
		if (int === null) return null;
		if (int === 0) return '0';
		fixed = (!fixed || fixed < 0) ? 0 : fixed;
		let b = (int).toPrecision(2).split('e'),
			k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) / 3),
			c = k < 1 ? int.toFixed(0 + fixed) : (int / Math.pow(10, k * 3) ).toFixed(1 + fixed),
			d = c < 0 ? c : Math.abs(c),
			e = d + ['', '—Ç—ã—Å', '–º–ª–Ω', '–º–ª—Ä–¥', '—Ç—Ä–ª–Ω'][k];

			e = e.replace(/e/g, '');
			e = e.replace(/\+/g, '');
			e = e.replace(/Infinity/g, '–î–û–•–ï–†–ê');

		return e;
	},
	
	gi: (int) => {
		int = int.toString();

		let text = ``;
		for (let i = 0; i < int.length; i++)
		{
			text += `${int[i]}&#8419;`;
		}

		return text;
	},
	decl: (n, titles) => { return titles[(n % 10 === 1 && n % 100 !== 11) ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2] },
	random: (x, y) => {
		return y ? Math.round(Math.random() * (y - x)) + x : Math.round(Math.random() * x);
	},
	pick: (array) => {
		return array[utils.random(array.length - 1)];
	},
	time: () => {
		return parseInt(new Date().getTime()/1000)
	}
}

const rotateText = {
	q: 'q',
	w: ' ç',
	e: '«ù',
	r: '…π',
	t: ' á',
	y: ' é',
	u: 'u',
	i: '·¥â',
	o: 'o',
	p: 'p',
	a: '…ê',
	s: 's',
	d: 'd',
	f: '…ü',
	g: '∆É',
	h: '…•',
	j: '…æ',
	k: ' û',
	l: 'l',
	z: 'z',
	x: 'x',
	c: '…î',
	v: ' å',
	b: 'b',
	n: 'n',
	m: '…Ø',

	–π: '≈Ü',
	—Ü: '«π',
	—É: ' é',
	–∫: ' û',
	–µ: '«ù',
	–Ω: '–Ω',
	–≥: '…π',
	—à: 'm',
	—â: 'm',
	–∑: 'Œµ',
	—Ö: '—Ö',
	—ä: 'q',
	—Ñ: '—Ñ',
	—ã: 'ƒ±q',
	–≤: ' ö',
	–∞: '…ê',
	–ø: 'u',
	—Ä: 'd',
	–æ: '–æ',
	–ª: 'v',
	–¥: '…ì',
	–∂: '–∂',
	—ç: '—î',
	—è: ' Å',
	—á: '“ª',
	—Å: '…î',
	–º: 'w',
	–∏: '–∏',
	—Ç: '…Ø',
	—å: 'q',
	–±: '∆ç',
	—é: 'oƒ±'
}

let btc = 6000;

let users = require('./users.json');
let buttons = [];

setTimeout(async () => {
	const rq = await request('https://api.cryptonator.com/api/ticker/btc-usd');

	if(!rq.ticker) return;
	if(!rq.ticker.price) return;

	btc = Math.floor(Number(rq.ticker.price));
}, 5);

setInterval(async () => {
	const rq = await request('https://api.cryptonator.com/api/ticker/btc-usd');

	if(!rq.ticker) return;
	if(!rq.ticker.price) return;

	btc = Math.floor(Number(rq.ticker.price));
}, 60000);

setInterval(async () => {
	await saveUsers();
	console.log('saved');
}, 30000);

setInterval(async () => {
	users.filter(x=> x.misc.farm !== 0).map(x=> {
		if(x.misc.farm === 1)
		{
			x.farm_btc += 2;
		}

		if(x.misc.farm === 2)
		{
			x.farm_btc += 10;
		}

		if(x.misc.farm === 3)
		{
			x.farm_btc += 100;
		}
	});
}, 3600000);

setInterval(async () => {
	users.map(user => {
		for(var i = 0; i < user.business.length; i++)
		{
			const biz = business[user.business[i].id - 1][user.business[i].upgrade - 1];
			user.business[i].moneys += Math.floor(biz.earn / biz.workers * user.business[i].workers)
		}
	});
}, 3600000);

function clearTemp()
{
	users.map(user => {
		user.timers.hasWorked = false;
		user.timers.bonus = false;
	});
}

clearTemp();

async function saveUsers()
{
	require('fs').writeFileSync('./users.json', JSON.stringify(users, null, '\t'));
	return true;
}

vk.setOptions({ token: '23b44bf954e85eef8dc4618ea09185ecd5f741eaf6eec3d7b45a46827e01f13bd4302cc89555d1ff85e7c', pollingGroupId: 189177237 });
const { updates, snippets } = vk;

updates.startPolling();
updates.on('message', async (message) => {
	if(Number(message.senderId) <= 0) return;
	if(/\[public189177237\|(.*)\]/i.test(message.text)) message.text = message.text.replace(/\[public189177237\|(.*)\]/ig, '').trim();

	if(!users.find(x=> x.id === message.senderId))
	{
		const [user_info] = await vk.api.users.get({ user_id: message.senderId });
		const date = new Date();

			users.push({
			id: message.senderId,
			uid: users.length,
			the_class:0,
			yid: users.length,
			balance: 5000,
			bank: 0,
			btc: 0,
			farm_btc: 0,
			farms: 0,
			farmslimit: 200,
			energy: 10,
			opit: 0,
			biz: 0,
			zhelezo: 0,
			zoloto: 0,
			almaz: 0,
			bizlvl: 0,
			nicklimit: 16,
			rating: 0,
			regDate: `${date.getDate()}.${date.getMonth()}.${date.getFullYear()}`,
			mention: true,
			ban: false,
			pp: 0,
			timers: {
				hasWorked: false,
				bonus: false,
				poxod: false,
				poxod2: false,
				kopat: false,
				hack: false,
				delacc: false,
				bonus: false,
				obva: false,
				krik: false,
				mine: false,
				tower: false,
			},
			tag: user_info.first_name,
			work: 0,
			business: 0,
			notifications: true,
			exp: 1,
			level: 1,
			levelt: 0,
			referal: null,
			promo: false,
			items: {
				health: 0,
				food: 0,
				mana: 0,
				stamina: 0,
				attack: 0,
				magic_attack: 0,
				protection: 0,
				
			},
			transport: {
				horse: 0,
				—Åhariots: 0,
				boat: 0,
			},
			armor: {
				boots: 0,
				helmet: 0,
				chestplate: 0,
				shoulders: 0,
				trousers: 0,
			},
			misc: {
				farm: 0,
				pet: 0,
			},
			settings: {
				firstmsg: true,
				adm: 0,
				trade: true,
				old: false,
				limit: 1000000,
			},
			pet: {
				lvl: 0,
				poterl: false
			},
			marriage: {
				partner: 0,
				requests: []
			}
		});
		console.log(` +1 –∏–≥—Ä–æ–∫ [–ò–≥—Ä–æ–∫–æ–≤: ${users.length}]`);
		console.log(``);
		saveUsers();
	}

	message.user = users.find(x=> x.id === message.senderId);

	const bot = (text, params) => {
		return message.send(`${message.user.tag}, ${text}`, params);
	}

	if(message.user.ban) return bot(`–≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω ‚õî`);

	const command = commands.find(x=> x[0].test(message.text));

	if(message.user.settings.firstmsg)
	{

bot(`123`,);
		message.user.settings.firstmsg = false;


		saveUsers();
		return;

	}

	if(!command)
	{

		if(!message.isChat) return bot(`—Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ—Ç–ø—Ä–∞–≤—å ¬´–ø–æ–º–æ—â—å¬ª —á—Ç–æ –±—ã —É–∑–Ω–∞—Ç—å –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã.`);
		if(message.isChat) return;

	}

	if(message.user.exp >= 24)
	{
		message.user.exp = 1;
		message.user.level += 1;
	}
	


	message.args = message.text.match(command[0]);
	await command[1](message, bot);

	saveUsers();
	console.log(` –í–≤–µ–¥–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: ${message.text}.`)
	console.log(``)
});

const cmd = {
	hear: (p, f) => {
		commands.push([p, f]);
	}
}

cmd.hear(/^(?:eval)\s([^]+)$/i, async (message, bot) => {
	if(message.senderId !== 514831440| message.senderId !== 514831440) return;

	try {
		const result = eval(message.args[1]);

		if(typeof(result) === 'string')
		{
			return bot(`string: ${result}`);
		} else if(typeof(result) === '–ì–æ—Ç–æ–≤–æ')
		{
			return bot(`number: ${result}`);
		} else {
			return bot(`${typeof(result)}: ${JSON.stringify(result, null, '&#12288;\t')}`);
		}
	} catch (e) {
		console.error(e);
		return bot(`–æ—à–∏–±–∫–∞:
		${e.toString()}`);
	}
});



cmd.hear(/^(?:–ø–æ–º–æ—â—å|–∫–æ–º–∞–Ω–¥—ã|üìö –ü–æ–º–æ—â—å|–º–µ–Ω—é|help|commands|cmds|menu|–Ω–∞—á–∞—Ç—å|start|@destinybot üìö –ü–æ–º–æ—â—å)$/i, async (message, bot) => {
	await bot(`–º–æ–∏ –∫–æ–º–∞–Ω–¥—ã:
‚ùì –ü–æ–º–æ—â—å [–∫–æ–º–∞–Ω–¥–∞] - –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã

–∫–æ–¥–µ—Ä https://vk.com/minecraftgame33

‚õ™–¢–∞–≤–µ—Ä–Ω–∞ 
‚†Ä‚†Äüé≤ –ö—É–±–∏–∫ [1-6] 
‚†Ä‚†Äü•õ –°—Ç–∞–∫–∞–Ω—á–∏–∫ [1-3] [—Å—É–º–º–∞] 
üëî –†–∞–±–æ—Ç–∞ - —Å–ø–∏—Å–æ–∫ —Ä–∞–±–æ—Ç 
‚†Äüî® –†–∞–±–æ—Ç–∞—Ç—å 
‚†Ä‚ùå –£–≤–æ–ª–∏—Ç—å—Å—è 

üåΩ –ü–∏—Ç–æ–º—Ü—ã: 
‚†Ä‚†Äüêí –ü–∏—Ç–æ–º–µ—Ü - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è 
‚†Ä‚†Äüê™ –ü–∏—Ç–æ–º–µ—Ü –ø–æ—Ö–æ–¥ 
‚†Ä‚†Äüåü –ü–∏—Ç–æ–º–µ—Ü —É–ª—É—á—à–∏—Ç—å 


üìí –ü—Ä–æ—Ñ–∏–ª—å 
üí≤ –ë–∞–ª–∞–Ω—Å 
üëë –†–µ–π—Ç–∏–Ω–≥ - –≤–∞—à —Ä–µ–π—Ç–∏–Ω–≥ 
‚úí –ù–∏–∫ [–Ω–∏–∫/–≤–∫–ª/–≤—ã–∫–ª] 
üõí –†—ã–Ω–æ–∫ 
üîã –§–µ—Ä–º–∞
ü§ù –ü–µ—Ä–µ–¥–∞—Ç—å [id] [—Å—É–º–º–∞] 
üèÜ –¢–æ–ø 
üíé –ë–æ–Ω—É—Å - –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å 
üë™ –ë—Ä–∞–∫ [id] - —Å–¥–µ–ª–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ 
‚†Ä ‚†Ä–ë—Ä–∞–∫–∏ - —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π 
üíî –†–∞–∑–≤–æ–¥ 
‚åö –î–∞—Ç–∞ [id] - –¥–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–≥—Ä–æ–∫–∞ 
üéÅ –î–æ–Ω–∞—Ç 
üë´ –†–µ—Ñ–µ—Ä–∞–ª - –¥–µ–Ω—å–≥–∏ –∑–∞ –¥—Ä—É–∑–µ–π 

üÜò –†–µ–ø–æ—Ä—Ç [—Ñ—Ä–∞–∑–∞] - –æ—à–∏–±–∫–∏ –∏–ª–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è`);
});

cmd.hear(/^(?:–¥–æ–Ω–∞—Ç)$/i, async (message, bot) => {
	return bot(`—Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –¥–æ–Ω–∞—Ç?
	–í—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –µ–≥–æ –ø–æ –¥–µ—à—ë–≤–∫–µ!

	1 –º–∏–ª–ª–∏–∞—Ä–¥ -  (9 —Ä—É–±–ª–µ–π)

	3 –º–∏–ª–ª–∏–∞—Ä–¥–∞ -  (15 —Ä—É–±–ª–µ–π)

	5 –º–∏–ª–ª–∏–∞—Ä–¥–æ–≤ -  (25 —Ä—É–±–ª–µ–π)

	30 –º–∏–ª–ª–∏–∞—Ä–¥–æ–≤ -  (40 —Ä—É–±–ª–µ–π)

	100 –º–∏–ª–ª–∏–∞—Ä–¥–æ–≤ -  (50 —Ä—É–±–ª–µ–π)
	–ó–∞ –¥–æ–Ω–∞—Ç–æ–º –ø–∏—Å–∞—Ç—å @vika_kus123 (—Å–æ–∑–¥–∞—Ç–µ–ª—å) –∏–ª–∏ @koldan_off (–∫–æ–¥–µ—Ä 2 –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞—Ç–µ–ª—è) –∏–ª–∏ @id478925120 (–∞–¥–º–∏–Ω —Å–ø–æ–Ω—Å–æ—Ä –¥–µ–Ω–µ–≥)` );
});


cmd.hear(/^(?:wiki|–≤–∏–∫–∏)\s(.*)$/i, async (message, bot) => {
    let args = message.text.match(/^(?:wiki|–≤–∏–∫–∏)\s?(.*)/i);
    function isEmpty( str ) { if (str.trim() == '') return true; return false; }
        rq("https://ru.wikipedia.org/w/api.phealth?action=opensearch&search="+encodeURIComponent((args[1] ? args[1] : "–í–ö–æ–Ω—Ç–∞–∫—Ç–µ"))+"&meta=siteinfo&rvprop=content&format=json")
        .then((res) => {
            if(isEmpty(res[2][0])) {
                if(isEmpty(res[2][1])) {
                    if(isEmpty(res[2][2])) return message.reply('–°—Ç–∞—Ç—å—è –Ω–µ –ø–æ–ª–Ω–∞—è, –ª–∏–±–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.\n\n–°—Å—ã–ª–∫–∞: ' + res[3][0]);
                } else {
                    return message.reply(`–Ø –Ω–∞—à—ë–ª —Ç–æ, —á—Ç–æ –í—ã –ø–æ–ø—Ä–æ—Å–∏–ª–∏ –Ω–∞–π—Ç–∏! \n\n–°—Å—ã–ª–∫–∞: ${res[3][1]}`);
                }
            } else {
                return message.reply(`–Ø –Ω–∞—à—ë–ª —Ç–æ, —á—Ç–æ –í—ã –ø–æ–ø—Ä–æ—Å–∏–ª–∏ –Ω–∞–π—Ç–∏!\n\n–°—Å—ã–ª–∫–∞: ${res[3][0]}`);
            }
        });
});

cmd.hear(/^(?:–ø–æ–º–æ—â—å)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].toLowerCase();

	if(message.args[1] === '–ø–µ—Ä–µ–≤–µ—Ä–Ω–∏')
	{
		return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–ü–µ—Ä–µ–≤–µ—Ä–Ω–∏" –ø–∏—à–µ—Ç –≤–∞—à —Ç–µ–∫—Å—Ç –≤–≤–µ—Ä—Ö –Ω–æ–≥–∞–º–∏ (–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ü–∏—Ñ—Ä—ã, –±—É–∫–≤—ã –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ –∏ –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞, –∞ —Ç–∞–∫–∂–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–∏–º–≤–æ–ª—ã)`);
	}

	if(message.args[1] === '—à–∞—Ä')
	{
		return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–®–∞—Ä" –∏—Å–ø–æ–ª—å–∑—É—è –º–∞–≥–∏—é —Ä–∞–Ω–¥–æ–º–∞ –≤—ã–≤–æ–¥–∏—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.`);
	}

	if(message.args[1] === '–∏–Ω—Ñ–∞')
	{
		return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–ò–Ω—Ñ–∞" —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —à–∞–Ω—Å —á–µ–≥–æ-–ª–∏–±–æ. –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã "–®–∞–Ω—Å" –∏–ª–∏ "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å"`);
	}

	if(message.args[1] === '–≤—ã–±–µ—Ä–∏')
	{
		return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–í—ã–±–µ—Ä–∏" —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –≤—ã–±–∏—Ä–∞–µ—Ç –æ–¥–∏–Ω –∏–∑ –¥–≤—É—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.`);
	}

	if(message.args[1] === '–∫–∞–∑–∏–Ω–æ')
	{
		return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–ö–∞–∑–∏–Ω–æ" —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º —É–º–Ω–æ–∂–∞–µ—Ç –≤–∞—à—É —Å—Ç–∞–≤–∫—É (–ú–æ–≥—É—Ç –≤—ã–ø–∞—Å—Ç—å –º–Ω–æ–∂–∏—Ç–µ–ª–∏ —Ö0, —Ö0.25, —Ö0.5, x0.75, —Ö1, —Ö2, —Ö5, —Ö50). –ß—Ç–æ–±—ã –ø–æ—Å—Ç–∞–≤–∏—Ç—å –≤—Å—é —Å—É–º–º—É –≤–≤–µ–¥–∏—Ç–µ "–ö–∞–∑–∏–Ω–æ –≤—Å–µ" –∏–ª–∏ "–ö–∞–∑–∏–Ω–æ –≤–∞–±–∞–Ω–∫"`);
	}

	if(message.args[1] === '–∫—É–±–∏–∫')
	{
		return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–ö—É–±–∏–∫" —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –≤–∞—à–µ —á–∏—Å–ª–æ —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º –æ—Ç 1 –¥–æ 6, –µ—Å–ª–∏ –≤—ã —É–≥–∞–¥–∞–ª–∏, —Ç–æ –ø–æ–ª—É—á–∞–µ—Ç–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ. –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å "–ö—É–±"`);
	}

	if(message.args[1] === '—Ç—Ä–µ–π–¥')
	{
		return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–¢—Ä–µ–π–¥" - —Å–∏–º—É–ª—è—Ç–æ—Ä –±–∏–Ω–∞—Ä–Ω—ã—Ö –æ–ø—Ü–∏–æ–Ω–æ–≤. –í–≤–µ–¥–∏—Ç–µ "–¢—Ä–µ–π–¥ –≤–≤–µ—Ä—Ö (—Å—É–º–º–∞)" –µ—Å–ª–∏ –¥—É–º–∞–µ—Ç–µ, —á—Ç–æ –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã –±—É–¥–µ—Ç —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å—Å—è, –∏–ª–∏ "–¢—Ä–µ–π–¥ –≤–Ω–∏–∑ (—Å—É–º–º–∞)" –µ—Å–ª–∏ –±—É–¥–µ—Ç —É–º–µ–Ω—å—à–∞—Ç—å—Å—è.`);
	}

	if(message.args[1] === '–±–∞—Ä')
	{
		return message.send(`–ß—Ç–æ–±—ã –∑–∞–π—Ç–∏ –≤ –±–∞—Ä –∏ –∏—Å–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—É –≤–≤–µ–¥–∏ "–±–∞—Ä [1-3] [—Å—É–º–º–∞]".`);
	}

	if(message.args[1] === '—Ä–∞–±–æ—Ç–∞')
	{
		return message.send(`–° –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã "–†–∞–±–æ—Ç–∞" –≤—ã –º–æ–∂–µ—Ç–µ —É—Å—Ç—Ä–æ–∏—Ç—å—Å—è –Ω–∞ –æ–¥–Ω—É –∏–∑ —Ä–∞–±–æ—Ç. –ß—Ç–æ–±—ã –æ—Ç—Ä—ã—Ç—å –Ω–æ–≤—ã–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏, –≤–∞–º –Ω—É–∂–Ω–æ –æ—Ç—Ä–∞–±–æ—Ç–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ –∏–≥—Ä–æ–≤—ã—Ö –Ω–µ–¥–µ–ª—å (–ö–æ–º–∞–Ω–¥–∞ "–†–∞–±–æ—Ç–∞—Ç—å"). –î–ª—è —É–≤–æ–ª—å–Ω–µ–Ω–∏—è —Å —Ä–∞–±–æ—Ç—ã –≤–≤–µ–¥–∏—Ç–µ "–£–≤–æ–ª–∏—Ç—å—Å—è".`);
	}

	if(message.args[1] === '–±–∏–∑–Ω–µ—Å')
	{
		return message.send(`–í–ª–∞–¥–µ—è –±–∏–∑–Ω–µ—Å–æ–º, –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–µ–º–∞–ª–æ –¥–µ–Ω–µ–≥:
		–ë–∏–∑–Ω–µ—Å—ã [–Ω–æ–º–µ—Ä] - –∫—É–ø–∏—Ç—å –±–∏–∑–Ω–µ—Å
		–ë–∏–∑–Ω–µ—Å - –≤–∞—à –±–∏–∑–Ω–µ—Å
		–ë–∏–∑–Ω–µ—Å —Å–Ω—è—Ç—å - —Å–Ω—è—Ç—å –¥–µ–Ω—å–≥–∏ —Å–æ —Å—á—ë—Ç–∞ –±–∏–∑–Ω–µ—Å–∞
		–ü—Ä–æ–¥–∞—Ç—å –±–∏–∑–Ω–µ—Å - –ø—Ä–æ–¥–∞–∂–∞ –±–∏–∑–Ω–µ—Å–∞`);
	}

	if(message.args[1] === '—Ä–µ—à–∏')
	{
		return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–†–µ—à–∏" —Ä–µ—à–∞–µ—Ç –≤–∞—à –ø—Ä–∏–º–µ—Ä (–†–µ—à–∏ 5 + 5).
		–ö–æ–º–∞–Ω–¥–∞ —É–º–µ–µ—Ç:
		–°–∫–ª–∞–¥—ã–≤–∞—Ç—å (+)
		–í—ã—á–∏—Ç–∞—Ç—å (-)
		–£–º–Ω–æ–∂–∞—Ç—å (*)
		–î–µ–ª–∏—Ç—å (/)`);
	}

	if(message.args[1] === '–∫—É—Ä—Å')
	{
		return message.send(`–° –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã "–ö—É—Ä—Å" –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å –ë–∏—Ç–∫–æ–∏–Ω–∞ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç.`);
	}

	if(message.args[1] === '–ø—Ä–æ—Ñ–∏–ª—å')
	{
		return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–ü—Ä–æ—Ñ–∏–ª—å" –≤—ã–≤–æ–¥–∏—Ç –≤–∞—à—É –∏–≥—Ä–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.`);
	}

	if(message.args[1] === '–±–∞–ª–∞–Ω—Å')
	{
		return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–ë–∞–ª–∞–Ω—Å" –≤—ã–≤–æ–¥–∏—Ç –∫–æ–ª-–≤–æ –≤–∞–ª—é—Ç—ã –Ω–∞ –≤–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ.`);
	}

	if(message.args[1] === '–±–∞–Ω–∫')
	{
		return message.send(`–ü—Ä–∏ –≤–≤–æ–¥–µ –∫–æ–º–∞–Ω–¥—ã "–ë–∞–Ω–∫" (–±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤) –≤—ã–≤–æ–¥–∏—Ç—Å—è –≤–∞—à–∞ —Å—É–º–º–∞ –Ω–∞ —Å—á—ë—Ç–µ. –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–ª–æ–∂–∏—Ç—å –Ω–∞ —Å—á—ë—Ç –¥–µ–Ω—å–≥–∏ –≤–≤–µ–¥–∏—Ç–µ "–ë–∞–Ω–∫ [—Å—É–º–º–∞]" (–ú–∞–∫—Å–∏–º—É–º 250.000.000.000$). –ß—Ç–æ–±—ã –∑–∞–±—Ä–∞—Ç—å –¥–µ–Ω—å–≥–∏ –∏–∑ –±–∞–Ω–∫–∞ –≤–≤–µ–¥–∏—Ç–µ "–ë–∞–Ω–∫ —Å–Ω—è—Ç—å/–≤–∑—è—Ç—å [—Å—É–º–º–∞]".
		–°—É–º–º–∞ –≤ –±–∞–Ω–∫–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–π —á–∞—Å (–±–æ–ª—å—à–µ —Å—É–º–º–∞ - –±–æ–ª—å—à–µ –ø—Ä–∏–±—ã–ª—å).`);
	}

	if(message.args[1] === '—Ä–µ–π—Ç–∏–Ω–≥')
	{
		return message.send(`–ü—É—Å—Ç–∞—è –∫–æ–º–∞–Ω–¥–∞ "–†–µ–π—Ç–∏–Ω–≥" (–±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤) –≤—ã–≤–æ–¥–∏—Ç –≤–∞—à–µ –∫–æ–ª-–≤–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ (—Ç–∞–∫–∂–µ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –≤ –ø—Ä–æ—Ñ–∏–ª–µ). –ü—Ä–∏ —É–∫–∞–∑–∞–Ω–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ (–ª—é–±–æ–µ —á–∏—Å–ª–æ) –≤—ã –∫—É–ø–∏—Ç–µ –¥–∞–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ –µ–¥–∏–Ω–∏—Ü —Ä–µ–π—Ç–∏–Ω–≥–∞ (üëë1 = 250.000.000$). –†–µ–π—Ç–∏–Ω–≥ –≤–ª–∏—è–µ—Ç –Ω–∞ –≤–∞—à–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤ —Ç–æ–ø–µ.`);
	}

	if(message.args[1] === '–Ω–∏–∫')
	{
		return message.send(`–° –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã "–ù–∏–∫" –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Å–µ–±–µ –Ω–∏–∫ –¥–ª–∏–Ω–Ω–æ—é –¥–æ 15 —Å–∏–º–≤–æ–ª–æ–≤. –¢–∞–∫–∂–µ, –Ω–∏–∫ –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–º/–Ω–µ–∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–º –≤ —Ç–æ–ø–µ "–ù–∏–∫ –≤–∫–ª" –∏ "–ù–∏–∫ –≤—ã–∫–ª"`);
	}

	if(message.args[1] === '–º–∞–≥–∞–∑–∏–Ω')
	{
		return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–ú–∞–≥–∞–∑–∏–Ω" –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –ø–æ–∫—É–ø–∫–∏.`);
	}

	if(message.args[1] === '–ø—Ä–æ–¥–∞—Ç—å')
	{
		return message.send(`–° –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã "–ü—Ä–æ–¥–∞—Ç—å" –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–∞—Ç—å –ª—é–±–æ–π –ø—Ä–µ–¥–º–µ—Ç (–ú–∞—à–∏–Ω—É, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä—É, —Ç–µ–ª–µ—Ñ–æ–Ω, —è—Ö—Ç—É, —Å–∞–º–æ–ª–µ—Ç, –≤–µ—Ä—Ç–æ–ª–µ—Ç, –±–∏—Ç–∫–æ–∏–Ω, —Ñ–µ—Ä–º—É).`);
	}

	if(message.args[1] === '–ø–µ—Ä–µ–¥–∞—Ç—å')
	{
		return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–ü–µ—Ä–µ–¥–∞—Ç—å" –ø–µ—Ä–µ–≤–æ–¥–∏—Ç —É–∫–∞–∑–∞–Ω–Ω—É—é –≤–∞–º–∏ —Å—É–º–º—É –ª—é–±–æ–º—É –∏–≥—Ä–æ–∫—É (–ü–µ—Ä–µ–¥–∞—Ç—å ${message.user.uid} 1000).`);
	}

	if(message.args[1] === '—Ç–æ–ø')
	{
		return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–¢–æ–ø" –≤—ã–≤–æ–¥–∏—Ç 10 –∏–≥—Ä–æ–∫–æ–≤ —Å —Å–∞–º—ã–º –±–æ–ª—å—à–∏–º —Ä–µ–π—Ç–∏–Ω–≥–æ–º.`);
	}

	if(message.args[1].includes('–±—Ä–∞–∫'))
	{
		return message.send(`–ò—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—ã "–ë—Ä–∞–∫", "–ë—Ä–∞–∫–∏", "—Ä–∞–∑–≤–æ–¥", –≤—ã –º–æ–∂–µ—Ç–µ –∂–µ–Ω–∏—Ç—å—Å—è/–≤—ã—Ö–æ–¥–∏—Ç—å –∑–∞–º—É–∂/—Ä–∞–∑–≤–æ–¥–∏—Ç—å—Å—è.
		–ë—Ä–∞–∫ [id] - —Å–¥–µ–ª–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
		–ë—Ä–∞–∫–∏ - —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
		–†–∞–∑–≤–æ–¥ - ...`);
	}

	if(message.args[1] === '–¥–∞—Ç–∞')
	{
		return message.send(`–ö–æ–º–∞–Ω–¥–∞ "–î–∞—Ç–∞" –≤—ã–≤–æ–¥–∏—Ç –¥–∞—Ç—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —á–µ–ª–æ–≤–µ–∫–∞ –≤ –±–æ—Ç–µ. –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å id —á–µ–ª–æ–≤–µ–∫–∞.`);
	}

	if(message.args[1] === '—Ä–µ–ø–æ—Ä—Ç')
	{
		return message.send(`–° –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã "–†–µ–ø–æ—Ä—Ç" –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª—é –±–æ—Ç–∞ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å "–†–µ–ø", "–ñ–∞–ª–æ–±–∞", "Rep".`);
	}
});




cmd.hear(/^(?:–ø–µ—Ä–µ–≤–µ—Ä–Ω–∏)\s([^]+)$/i, async (message, bot) => {
	let text = ``;
	message.args[1].split('').map(x=> {
		if(rotateText[x])
		{
			text += rotateText[x];
		}
	});

	return bot(`–¥–µ—Ä–∂–∏ : "${text.split('').reverse().join('')}"`)
});

cmd.hear(/^(?:—à–∞—Ä)\s([^]+)$/i, async (message, bot) => {
	const phrase = utils.pick(['–ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –Ω–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–µ', '—Å–µ–π—á–∞—Å –Ω–µ–ª—å–∑—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å', '–ø–æ–∫–∞ –Ω–µ —è—Å–Ω–æ', '–∑–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç - "–î–∞"', '–∑–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç - "–ù–µ—Ç"', '–º–æ–∂–µ—à—å –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω –≤ —ç—Ç–æ–º', '–º–æ–π –æ—Ç–≤–µ—Ç - "–Ω–µ—Ç"', '–º–æ–π –æ—Ç–≤–µ—Ç - "–¥–∞"', '–±–µ—Å—Å–ø–æ—Ä–Ω–æ', '–º–Ω–µ –∫–∞–∂–µ—Ç—Å—è - "–î–∞"', '–º–Ω–µ –∫–∞–∂–µ—Ç—Å—è - "–ù–µ—Ç"']);
	return bot(phrase);
});

cmd.hear(/^(?:setwall)\s(.*)$/i, async (message, bot) => {
	if(message.senderId !== 514831440| message.senderId !== 514831440) return;

	message.args[1] = message.args[1].replace("wall", "");
	message.args[1] = message.args[1].split('_');
	wall_to_send = "wall" + message.args[1][0] + "_" + message.args[1][1];
	return bot(`–æ–±–Ω–æ–≤–ª—ë–Ω –ø–æ—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏`);
});

cmd.hear(/^(?:textsend)\s([^]+)/i, async (message, bot) => {
if(message.senderId !== 514831440| message.senderId !== 514831440) return;

	await bot(`—Ä–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞`);
	users.map(user => {
		vk.api.messages.send({ user_id: user.id, message: message.args[1], attachment: wall_to_send }).then(() => {
			console.log(`SENDED ${user.id}`)
		}).catch((err) => {
			console.log(`NOOOOT ${user.id}`)
		});
	});

	for(var i = 1; i < 900; i++) {
		vk.api.messages.send({ peer_id: 2000000000 + i, message: message.args[1], attachment: wall_to_send }).then(() => {
			console.log(`CHAT SENDED ${user.id}`)
		}).catch((err) => {
			console.log(`CHAT NOOOOT ${user.id}`)
		});
	}
	/*message.args[1] = message.args[1].replace("wall", "");
	message.args[1] = message.args[1].split('_');
	wall_to_send = "wall" + message.args[1][0] + "_" + message.args[1][1];
	return bot(`–æ–±–Ω–æ–≤–ª—ë–Ω –ø–æ—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏`);*/
});

cmd.hear(/^(?:–∏–Ω—Ñ–∞|—à–∞–Ω—Å|–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å)\s([^]+)$/i, async (message, bot) => {
	const phrase = utils.pick(['—à–∞–Ω—Å —ç—Ç–æ–≥–æ', '–º–Ω–µ –∫–∞–∂–µ—Ç—Å—è –æ–∫–æ–ª–æ']);
	const percent = utils.random(100);

	return bot(`${phrase} ${percent}%`)
});

cmd.hear(/^(?:–≤—ã–±–µ—Ä–∏)\s([^]+)\s(?:–∏–ª–∏)\s([^]+)$/i, async (message, bot) => {
	const first = message.args[1];
	const second = message.args[2];

	const phrase = utils.pick([`–∫–æ–Ω–µ—á–Ω–æ ${utils.random(1, 2)} –≤–∞—Ä–∏–∞–Ω—Ç`, `–º–Ω–µ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ ${utils.random(1, 2)} –≤–∞—Ä–∏–∞–Ω—Ç –ª—É—á—à–µ`]);
	return bot(`${phrase}`);
});

cmd.hear(/^(?:–ø—Ä–æ—Ñ–∏–ª—å)$/i, async (message, bot) => {
	let text = ``;
    text += `üîé ID: ${message.user.uid}\n`;
	
    text += `–ù–∏–∫: ${message.user.yid}\n`;
	text += `–∫–ª–∞—Å—Å: ${the_class[message.user.the_class - 0].name}\n`;
	text += `üí∞ –î–µ–Ω—å–≥–∏: ${utils.sp(message.user.balance)}üåÄ\n`;
	text += `‚ù§ –ó–¥–æ—Ä–æ–≤—å–µ: ${utils.sp(message.user.items.health)}\n`;
	text += `üõ° –ó–∞—â–∏—Ç–∞: ${utils.sp(message.user.items.protection)}\n`;
	text += `üçñ –µ–¥–∞: ${utils.sp(message.user.items.food)}\n`;
	text += `‚ú® –ú–∞–Ω–∞: ${utils.sp(message.user.items.mana)}\n`;
	
	    text += `–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: ${utils.sp(message.user.items.stamina)}\n`;
	    text += `–ê—Ç–∞–∫–∞: ${utils.sp(message.user.items.attack)}\n`;
	    text += `–ú–∞–≥. –∞—Ç–∞–∫–∞: ${utils.sp(message.user.items.magic_attack)}\n`;
		
	//if(message.user.bank) text += `üåÄ –í –±–∞–Ω–∫–µ: ${utils.sp(message.user.bank)}$\n`;
	//if(message.user.btc) text += `üåÄ –ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ${utils.sp(message.user.btc)}\n`;
	text += `üëë –†–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}\n`;
	text += `üåü –£—Ä–æ–≤–µ–Ω—å: ${message.user.level} [${message.user.exp}/24]\n`;
	
	text += `\nüîë –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç :\n`;
		
		text += `üèá –õ–æ—à–∞–¥—å: ${horse[message.user.transport.horse - 0].name}\n`;
		text += `üî∑ –ö–æ–ª–µ—Å–Ω–∏—Ü–∞: ${—Åhariots[message.user.transport.—Åhariots - 0].name}\n`;
		text += `‚õµ –õ–æ–¥–∫–∞: ${boat[message.user.transport.boat - 0].name}\n`;
		
	//if(message.user.work) text += `üëî –†–∞–±–æ—Ç–∞: ${works[message.user.work - 1].name}\n`;
	//if(message.user.marriage.partner) text += `üë¨ –ü–∞—Ä—Ç–Ω–µ—Ä: ${users[message.user.marriage.partner].tag}`;
	
		text += `\nüëò –ë—Ä–æ–Ω—è:\n`;
		text += `üìø –®–ª–µ–º: ${helmet[message.user.armor.helmet - 0].name}\n`;
		text += `üß• –ù–∞–≥—Ä—É–¥–Ω–∏–∫ : ${chestplate[message.user.armor.chestplate - 0].name}\n`;
		text += `üëñ –®—Ç–∞–Ω—ã: ${trouserss[message.user.armor.trousers - 0].name}\n`;
		text += `üë¢ –°–∞–ø–æ–≥–∏: ${boots[message.user.armor.boots - 0].name}\n`;
		
		text += `‚öú –ù–∞–ø–ª–µ—á–Ω–∏–∫–∏: ${shoulders[message.user.armor.shoulders - 0].name}\n`;
		
		//if(message.user.misc.farm) text += `‚†Äüîã –§–µ—Ä–º–∞: ${farms[message.user.misc.farm - 1].name} (${message.user.misc.farm_count} —à—Ç.)\n`;
		if(message.user.business.length != 0)
		{
			for(var i = 0; i < message.user.business.length; i++)
			{
				text += `‚†Ä${ business[message.user.business[i].id - 1][message.user.business[i].upgrade - 1].icon } ${business[message.user.business[i].id - 1][message.user.business[i].upgrade - 1].name}\n`;
			}
		}
	

	text += `\nüìó –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${message.user.regDate}`;
	return bot(`—Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:\n${text}`);
});

cmd.hear(/^(?:–±–∞–ª–∞–Ω—Å)$/i, async (message, bot) => {
	let text = `–Ω–∞ —Ä—É–∫–∞—Ö: ${utils.sp(message.user.balance)}$`;

	if(message.user.bank) text += `\nüí≥ –í –±–∞–Ω–∫–µ: ${utils.sp(message.user.bank)}$`;
	if(message.user.btc) text += `\nüåê –ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ${utils.sp(message.user.btc)}‡∏ø`;

	return bot(text);
});

cmd.hear(/^(?:–±–∞–Ω–∫)$/i, async (message, bot) => {
	return bot(`–Ω–∞ –≤–∞—à–µ–º –±–∞–Ω–∫–æ–≤—Å–∫–æ–º —Å—á—ë—Ç–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è ${utils.sp(message.user.bank)}$`);
});

cmd.hear(/^(?:–±–∞–Ω–∫)\s(?:—Å–Ω—è—Ç—å)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
	message.args[1] = message.args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.bank);

	if(!Number(message.args[1])) return;
	message.args[1] = Math.floor(Number(message.args[1]));

	if(message.args[1] <= 0) return;

	if(message.args[1] > message.user.bank) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Å—É–º–º—ã`);
	else if(message.args[1] <= message.user.bank)
	{
		message.user.balance += message.args[1];
		message.user.bank -= message.args[1];

		return bot(`–≤—ã —Å–Ω—è–ª–∏ ${utils.sp(message.args[1])}$
üí≥ –û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Å—á—ë—Ç–µ: ${utils.sp(message.user.bank)}$
üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`);
	}
});


cmd.hear(/^(?:—Å—Ç—ë–ø–∞ —Ñ–∞–∫|–°–¢–ï–ü–ê –§–ê–ö|–°–¢–Å–ü–ê –§–ê–ö|–°—Ç–µ–ø–∞ —Ñ–∞–∫|—Å—Ç–µ–ø–∞ —Ñ–∞–∫|—Ñ–∞–∫)/i, async (message, bot) => { 
        return bot(`üñïüèªüñïüèªüñïüèª`) 
});


cmd.hear(/^(?:–ø–ª–∞–∫)/i, async (user, bot) => {
		return bot(`üò¢üò¢üò≠üò≠`);
});


cmd.hear(/^(?:–≥–æ—Ä–∏ –≤ –∞–¥—É|—Å–∂–µ—á—å|—Å–∂—ç—á—å)/i, async (user, bot) => {
		return bot(`üî•üî•üî•`);
});

cmd.hear(/^(?:—Ö—Ç—å —Ç—Ñ—É|–¢—å–§—É|–°–≤–∏–Ω–∫–∞ —Ö–∞—Ä–∫–∞–µ—Ç—Å—è|–•–¢–¨ –¢–§–£|—Ç—å—Ñ—É )\s([0-9]+)$/i, async (user, bot) => {
        return bot(`üí¶üí¶üí¶`);
});


cmd.hear(/^(?:–°—Ç—ë–ø–∞ —Ñ–∞–∫)\s([0-9]+)$/i, async (message, bot) => { 
let user = users.find(x=> x.uid === Number(message.args[1]));
if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`); 
if(message.args[1] == message.user.uid) return bot(`–í—ã –¥–∞—É–Ω? –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–µ–±—è –ø–æ—Å–ª–∞—Ç—å :/`);
await bot(`–≤—ã –ø–æ—Å–ª–∞–ª–∏ –∏–≥—Ä–æ–∫–∞ ${user.tag} üñïüèªüñïüèªüñïüèª.`); 
vk.api.messages.send({ user_id: user.id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï]\n–°—Ç—ë–ø–∞ –ø–æ—Å–ª–∞–ª –≤–∞—Å üñïüèªüñïüèªüñïüèª.` }); 
});


cmd.hear(/^(?:–ø–ª—é–Ω—É—Ç—å)\s([0-9]+)$/i, async (message, bot) => { 
let user = users.find(x=> x.uid === Number(message.args[1]));
if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`); 
if(message.args[1] == message.user.uid) return bot(`–í—ã –¥–∞—É–Ω? –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–µ–±—è –ø–æ—Å–ª–∞—Ç—å :/`);
await bot(`–≤—ã –ø–ª—é–Ω—É–ª–∏ –≤ ${user.tag} üí¶üí¶üí¶.`);
vk.api.messages.send({ user_id: user.id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï]\n–ò–≥—Ä–æ–∫ "${message.user.tag}" –≤ –≤–∞—Å –ø–ª—é–Ω—É–ª–∏ üí¶üí¶üí¶.` }); 
});


cmd.hear(/^(?:—Å–∂—ç—á)\s([0-9]+)$/i, async (message, bot) => { 
let user = users.find(x=> x.uid === Number(message.args[1]));
if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`); 
if(message.args[1] == message.user.uid) return bot(`–í—ã –¥–∞—É–Ω? –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–µ–±—è –ø–æ—Å–ª–∞—Ç—å :/`);
await bot(`–≤—ã —Å–æ–∂–≥–ª–∏ –≤ ${user.tag} üî•üî•üî•.`); 
vk.api.messages.send({ user_id: user.id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï]\n–ò–≥—Ä–æ–∫ "${message.user.tag}" –≤–∞—Å —Å–æ–∂–≥–ª–∏ üî•üî•üî•.` }); 
});























cmd.hear(/^(?:–±–∞–Ω–∫)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
	message.args[1] = message.args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);
	if(message.user.bank + message.args[1] > 250000000000) return bot(`–Ω–∞ —Å—á–µ—Ç—É –≤ –±–∞–Ω–∫–µ –Ω–µ –º–æ–∂–µ—Ç –ª–µ–∂–∞—Ç—å –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –±–æ–ª—å—à–µ 250.000.000.000$`);

	if(message.args[1] > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Å—É–º–º—ã`);
	else if(message.args[1] <= message.user.balance)
	{
		message.user.balance -= message.args[1];
		message.user.bank += message.args[1];

		return bot(`–≤—ã –ø–æ–ª–æ–∂–∏–ª–∏ –Ω–∞ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç ${utils.sp(message.args[1])}$`);
	}
});

cmd.hear(/^(?:—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)\s(–≤—ã–∫–ª|–≤–∫–ª)$/i, async (message, bot) => {
	if(message.args[1].toLowerCase() === '–≤—ã–∫–ª')
	{
		message.user.notifications = false;
		return bot(`—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã! üîï`);
	}

	if(message.args[1].toLowerCase() === '–≤–∫–ª')
	{
		message.user.notifications = false;
		return bot(`—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã! üîî`);
	}
});



    cmd.hear(/^(?:–≤—ã–¥–∞—Ç—å)\s([0-9]+)\s(.*)$/i, async (message, bot) => {
message.args[2] = message.args[2].replace(/(\.|\,)/ig, ''); 
message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000'); 
message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000'); 

if(message.senderId !== 478925120| message.senderId !== 478925120 ) return; 
if(!Number(message.args[2])) return; 
message.args[2] = Math.floor(Number(message.args[2])); 

if(message.args[2] <= 0) return; 

{ 
let user = users.find(x=> x.uid === Number(message.args[1])); 
if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`); 


user.balance += message.args[2]; 


await bot(`–≤—ã –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${user.tag} ${utils.sp(message.args[2])}$`); 
if(user.notifications) vk.api.messages.send({ user_id: user.id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï] 
–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä ${message.user.tag} –≤—ã–¥–∞–ª –≤–∞–º ${utils.sp(message.args[2])}$! 
üîï –í–≤–µ–¥–∏—Ç–µ "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª", –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è` }); 
} 
});



cmd.hear(/^(?:–≤—ã–¥–∞—Ç—å1)\s([0-9]+)\s(.*)$/i, async (message, bot) => { 
message.args[2] = message.args[2].replace(/(\.|\,)/ig, ''); 
message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000'); 
message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000'); 

if(message.senderId !== 514831440| message.senderId !== 514831440 ) return; 
if(!Number(message.args[2])) return; 
message.args[2] = Math.floor(Number(message.args[2])); 

if(message.args[2] <= 0) return; 

{ 
let user = users.find(x=> x.uid === Number(message.args[1])); 
if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`); 


user.balance  += message.args[2]; 


await bot(`–≤—ã –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${user.tag} ${utils.sp(message.args[2])}üåÄ`); 
if(user.notifications) vk.api.messages.send({ user_id: user.id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï] 
–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä ${message.user.tag} –≤—ã–¥–∞–ª –≤–∞–º ${utils.sp(message.args[2])}üåÄ! 
üîï –í–≤–µ–¥–∏—Ç–µ "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª", –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è` }); 
} 
});








cmd.hear(/^(?:–≤—ã–≥–Ω–∞—Ç—å –∏–∑ –¥–µ—Ä–µ–≤–Ω–∏)\s([0-9]+)\s(.*)$/i, async (message, bot) => {
	message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');


	if(!Number(message.args[2])) return;
	message.args[2] = Math.floor(Number(message.args[2]));

	if(message.args[2] <= 0) return;
	if(message.user.admin == true) return

	{
		let user = users.find(x=> x.uid === Number(message.args[1]));
		if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è –∂–∏—Ç–µ–ª—è`);

		if(user.uid === message.user.uid) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –∂–∏—Ç–µ–ª—è`);

		user.ban = true;

		await bot(`–í—ã –≤—ã–≥–Ω–∞–ª–∏ –∂–∏—Ç–µ–ª—è ${user.tag} ${utils.sp(message.args[2])}$`);
		if(user.notifications) vk.api.messages.send({ user_id: user.id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï]
‚ñ∂ –ë–∞—Ä–∏–Ω ${message.user.tag} –≤—ã–≥–Ω–∞–ª –≤–∞—Å –ø–æ –ø—Ä–∏—á–∏–Ω–µ ${utils.sp(message.args[2])}!
` });
	}
});



cmd.hear(/^(?:–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤ –¥–µ—Ä–µ–≤–Ω—é)\s([0-9]+)\s(.*)$/i, async (message, bot) => {
	message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');


	if(!Number(message.args[2])) return;
	message.args[2] = Math.floor(Number(message.args[2]));

	if(message.args[2] <= 0) return;
	if(message.user.admin == true) return

	{
		let user = users.find(x=> x.uid === Number(message.args[1]));
		if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è –∂–∏—Ç–µ–ª—è`);

		if(user.uid === message.user.uid) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –∂–∏—Ç–µ–ª—è`);


		user.ban = false;

		await bot(`–í—ã —Ä–∞–∑—Ä–µ—à–∏–ª–∏ –∫—Ä–µ—Å—Ç—å—è–Ω–∏–Ω—É –ø–æ—Å–µ—à–∞—Ç—å –≤–∞—à—É –¥–µ—Ä–µ–≤–Ω—é ${user.tag} ${utils.sp(message.args[2])}$`);
		if(user.notifications) vk.api.messages.send({ user_id: user.id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï]
‚ñ∂ –ë–∞—Ä–∏–Ω ${message.user.tag} —Ä–∞–∑—Ä–µ—à–∏–ª –ø–æ—Å–µ—à–∞—Ç—å –¥–µ—Ä–µ–≤–Ω—é  ${utils.sp(message.args[2])}!
` });
	}
});

cmd.hear(/^(?:set)\s([0-9]+)\s(.*)\s(.*)$/i, async (message, bot) => {
	if(message.user.admin == false) return;
	message.args[3] = message.args[3].replace(/(\.|\,)/ig, '');
	message.args[3] = message.args[3].replace(/(–∫|k)/ig, '000');
	message.args[3] = message.args[3].replace(/(–º|m)/ig, '000000');

	if(Number(message.args[3])) message.args[3] = Math.floor(Number(message.args[3]));
	if(message.args[3] == "true" || message.args[3] == "false") message.args[3] = message.args[3] == "true" ? true : false;
	if(message.args[2] == "admin" && bot_owner != message.user.id) return bot(`–∑–∞—â–∏—â—ë–Ω–Ω–æ–µ –ø–æ–ª–µ, –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ–µ –≤–∞–º –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è`);

	let user = users.find(x=> x.uid === Number(message.args[1]));
	if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`);

	if(user[message.args[2]] == null) return bot(`—Ç–∞–∫–æ–≥–æ –ø–æ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
	user[message.args[2]] = message.args[3];

	return bot(`–≤—ã —Å–º–µ–Ω–∏–ª–∏ –ø–æ–ª–µ ${message.args[2]} –∏–≥—Ä–æ–∫—É ${user.tag} –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ ${message.args[3]}`);
});

cmd.hear(/^(?:–±–∞–Ω)\s([0-9]+)$/i, async (message, bot) => {
	if(message.user.admin == false) return;

	let user = users.find(x=> x.uid === Number(message.args[1]));
	if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`);

	user.ban = true;

	return bot(`–≤—ã –∑–∞–±–∞–Ω–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ ${user.tag}`);
});

cmd.hear(/^(?:—Ä–∞–∑–±–∞–Ω)\s([0-9]+)$/i, async (message, bot) => {
	if(message.user.admin == false) return;

	let user = users.find(x=> x.uid === Number(message.args[1]));
	if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`);

	user.ban = false;

	return bot(`–≤—ã —Ä–∞–∑–±–∞–Ω–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ ${user.tag}`);
});




cmd.hear(/^(?:–≤—ã–¥–∞—Ç—å)\s([0-9]+)\s(.*)$/i, async (message, bot) => {
	message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
	message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
	message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
	message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);
	const find = () => {
		let pos = 1000;

		for (let i = 0; i < top.length; i++)
		{
			if(top[i].id === message.senderId) return pos = i;
		}

		return pos;
	}

	if(!Number(message.args[2])) return;
	message.args[2] = Math.floor(Number(message.args[2]));

	if(message.args[2] <= 0) return;
	
		let user = users.find(x=> x.uid === Number(message.args[1]));
		if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`);

		user[i].balance += message.args[2];

		await bot(`–≤—ã –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫–∞–º ${utils.sp(message.args[2])}$`);
		
	
});




cmd.hear(/^(?:–ø–µ—Ä–µ–¥–∞—Ç—å)\s([0-9]+)\s(.*)$/i, async (message, bot) => {
	message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
	message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
	message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
	message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);

	if(!Number(message.args[2])) return;
	message.args[2] = Math.floor(Number(message.args[2]));

	if(message.args[2] <= 0) return;

	if(message.args[2] > message.user.balance) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥
üí∞ –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`);
	else if(message.args[2] <= message.user.balance)
	{
		if(message.user.limit == null) message.user.limit = { timer: utils.time(), sent: 0 };
		if(utils.time() - message.user.limit.timer >= 86400) { message.user.limit.timer = utils.time(); message.user.limit.sent = 0; }
		if(message.args[2] + message.user.limit.sent > 10000000000) return bot(`–¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏: ${utils.sp(10000000000 - message.user.limit.sent)}$`)
		let user = users.find(x=> x.uid === Number(message.args[1]));
		if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`);

		if(user.uid === message.user.uid) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`);

		message.user.balance -= message.args[2];
		message.user.limit.sent += message.args[2];
		user.balance += message.args[2];

		await bot(`–≤—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${user.tag} ${utils.sp(message.args[2])}$`);
		if(user.notifications) vk.api.messages.send({ user_id: user.id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï]
‚ñ∂ –ò–≥—Ä–æ–∫ ${message.user.tag} –ø–µ—Ä–µ–≤–µ–ª –≤–∞–º ${utils.sp(message.args[2])}$!
üîï –í–≤–µ–¥–∏—Ç–µ "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª", –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è` });
	}
});

cmd.hear(/^(?:—Ä–µ–π—Ç–∏–Ω–≥)$/i, async (message, bot) => {
	return bot(`–≤–∞—à —Ä–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}üëë`);
});

cmd.hear(/^(?:–Ω–∏–∫)\s(–≤–∫–ª|–≤—ã–∫–ª)$/i, async (message, bot) => {
	if(message.args[1].toLowerCase() === '–≤–∫–ª')
	{
		message.user.mention = true;
		return bot(`–≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞!`);
	}

	if(message.args[1].toLowerCase() === '–≤—ã–∫–ª')
	{
		message.user.mention = false;
		return bot(`–≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞!`);
	}
});

cmd.hear(/^(?:–Ω–∏–∫)\s(.*)$/i, async (message, bot) => {
	if(message.args[1].length >= 15) return bot(`–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –Ω–∏–∫–∞ 15 —Å–∏–º–≤–æ–ª–æ–≤`);

	message.user.yid = message.args[1];
	return bot(`–≤—ã —Ç–µ–ø–µ—Ä—å "${message.user.yid}"`);
});

cmd.hear(/^(?:–º–∞–≥–∞–∑–∏–Ω)$/i, async (message, bot) => {
	return bot(`—Ä–∞–∑–¥–µ–ª—ã –º–∞–≥–∞–∑–∏–Ω–∞:
üèá–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç: 

üëò –ë—Ä–æ–Ω—è:

üçñ –ï–¥–∞:

üî™ –û—Ä—É–∂–∏–µ:

https://vk.com/minecraftgame33 –∫–æ–¥–µ—Ä

üîé –î–ª—è –ø–æ–∫—É–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ "[–∫–∞—Ç–µ–≥–æ—Ä–∏—è] [–Ω–æ–º–µ—Ä]".
‚†Ä ‚†Ä –ù–∞–ø—Ä–∏–º–µ—Ä: "${utils.pick(["–ø–æ—è—Å–∞ 1"])}"`);
});

cmd.hear(/^(?:–ø—Ä–æ–¥–∞—Ç—å)\s(.*)\s?(.*)?$/i, async (message, bot) => {
	let options = {
		count: null
	}

	message.args[2] = message.args[1].split(' ')[1];

	if(!message.args[2]) options.count = 1;
	if(message.args[2])
	{
		message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
		message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
		message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');

		message.args[2] = Math.floor(Number(message.args[2]));
		if(message.args[2] <= 0) return;

		if(!message.args[2]) options.count = 1;
		else if(message.args[2]) options.count = message.args[2];
	}

	if(/–õ–æ—à–∞–¥—å/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.transport.horse) return bot(`—É –≤–∞—Å –Ω–µ—Ç –ª–æ—à–∞–¥–∏`);
		let a = Math.floor(horse[message.user.transport.horse - 1].cost * 0.85);

		message.user.balance += Math.floor(horse[message.user.transport.horse - 1].cost * 0.85);
		message.user.transport.horse = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ—é –õ–æ—à–∞–¥—å –∑–∞ ${utils.sp(a)}$`);
	}

	if(/–ö–æ–ª–µ—Å–Ω–∏—Ü—É/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.transport.—Åhariots) return bot(`—É –≤–∞—Å –Ω–µ—Ç –ö–æ–ª–µ—Å–Ω–∏—Ü—ã`);
		let a = Math.floor(—Åhariots[message.user.transport.—Åhariots - 1].cost * 0.85);

		message.user.balance += Math.floor(—Åhariots[message.user.transport.—Åhariots - 1].cost * 0.85);
		message.user.transport.—Åhariots = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ—é –ö–æ–ª–µ—Å–Ω–∏—Ü—É –∑–∞ ${utils.sp(a)}$`);
	}

	if(/–õ–æ–¥–∫—É:)—Ç/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.transport.boat) return bot(`—É –≤–∞—Å –Ω–µ—Ç –õ–æ–¥–∫–∏`);
		let a = Math.floor(boat[message.user.transport.boat - 1].cost * 0.85);

		message.user.balance += Math.floor(boat[message.user.transport.boat - 1].cost * 0.85);
		message.user.transport.boat = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π –õ–æ–¥–∫—É –∑–∞ ${utils.sp(a)}$`);
	}

	if(/–ê–º—É–ª–µ—Ç)—Ç/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.armor.helmet) return bot(`—É –≤–∞—Å –Ω–µ—Ç –ê–º—É–ª–µ—Ç–∞`);
		let a = Math.floor(helmet[message.user.armor.helmet - 1].cost * 0.85);

		message.user.balance += Math.floor(helmet[message.user.armor.helmet - 1].cost * 0.85);
		message.user.armor.helmet = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π –ê–º—É–ª–µ—Ç –∑–∞ ${utils.sp(a)}$`);
	}

	if(/–ö–∏—Ä–∞—Å—É/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.armor.chestplate) return bot(`—É –≤–∞—Å –Ω–µ—Ç –ö–∏—Ä–∞—Å—ã`);
		let a = Math.floor(chestplate[message.user.armor.chestplate - 1].cost * 0.85);

		message.user.balance += Math.floor(chestplate[message.user.armor.chestplate - 1].cost * 0.85);
		message.user.armor.chestplate = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ—é –ö–∏—Ä–∞—Å—É –∑–∞ ${utils.sp(a)}$`);
	}

	if(/–ù–∞–ø–ª–µ—á–Ω–∏–∫–∏/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.armor.shoulders) return bot(`—É –≤–∞—Å –Ω–µ—Ç –ù–∞–ø–ª–µ—á–Ω–∏–∫–æ–≤`);
		let a = Math.floor(shoulders[message.user.armor.shoulders - 1].cost * 0.85);

		message.user.balance += Math.floor(shoulders[message.user.armor.shoulders - 1].cost * 0.85);
		message.user.armor.shoulders = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–∏ –ù–∞–ø–ª–µ—á–Ω–∏–∫–∏ –∑–∞ ${utils.sp(a)}$`);
	}

	if(/–®—Ç–∞–Ω—ã/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.armor.trousers) return bot(`—É –≤–∞—Å –Ω–µ—Ç –®—Ç–∞–Ω–∏–Ω`);
		let a = Math.floor(trouserss[message.user.armor.trousers - 1].cost * 0.85);

		message.user.balance += Math.floor(trouserss[message.user.armor.trousers - 1].cost * 0.85);
		message.user.armor.trousers = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–∏ –®—Ç–∞–Ω—ã –∑–∞ ${utils.sp(a)}$`);
	}

    if(/–°–∞–ø–æ–≥–∏/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.armor.boots) return bot(`—É –≤–∞—Å –Ω–µ—Ç –°–∞–ø–æ–≥`);
		let a = Math.floor(boots[message.user.armor.boots - 1].cost * 0.85);

		message.user.balance += Math.floor(boots[message.user.armor.boots - 1].cost * 0.85);
		message.user.armor.boots = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–∏ –°–∞–ø–æ–≥–∏ –∑–∞ ${utils.sp(a)}$`);
	}
	
    if(/–ï–¥—É/i.test(message.args[1].toLowerCase()))
	{
		if(message.user.food == 0) return bot(`—É –≤–∞—Å –Ω–µ—Ç –µ–¥—ã`);
		if(options.count > message.user.food) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –µ–¥—ã`);
		if(options.count <= 0) return bot(`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–∞—Ç—å —Å—Ç–æ–ª—å–∫–æ –µ–¥—ã`);
		let a = Math.floor(farms[message.user.misc.food - 1].cost * options.count * 0.85);

		message.user.balance += a;
		message.user.food -= options.count;
		if(message.user.food == 0) message.user.misc.food = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ—é –µ–¥—É (${options.value} —à—Ç.) –∑–∞ ${utils.sp(a)}$`);
	}

	if(/—Ñ–µ—Ä–º/i.test(message.args[1].toLowerCase()))
	{
		if(message.user.misc.farm == 0) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Ñ–µ—Ä–º—ã`);
		if(options.count > message.user.misc.farm_count) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ —Ñ–µ—Ä–º`);
		if(options.count <= 0) return bot(`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–∞—Ç—å —Å—Ç–æ–ª—å–∫–æ —Ñ–µ—Ä–º`);
		let a = Math.floor(farms[message.user.misc.farm - 1].cost * options.count * 0.85);

		message.user.balance += a;
		message.user.misc.farm_count -= options.count;
		if(message.user.misc.farm_count == 0) message.user.misc.farm = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–∏ —Ñ–µ—Ä–º—ã (${options.value} —à—Ç.) –∑–∞ ${utils.sp(a)}$`);
	}

	if(/—Ä–µ–π—Ç–∏–Ω–≥/i.test(message.args[1].toLowerCase()))
	{
		if(options.count > message.user.rating) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞`);
		let a = (150000000 * options.count);

		message.user.balance += Math.floor(a);
		message.user.rating -= options.count;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ ${options.count} ${utils.decl(options.count, ['—Ä–µ–π—Ç–∏–Ω–≥', '—Ä–µ–π—Ç–∏–Ω–≥–∞', '—Ä–µ–π—Ç–∏–Ω–≥–æ–≤'])} –∑–∞ ${utils.sp(Math.floor(a))}`);
	}

	if(/–±–∏—Ç–∫–æ–∏–Ω/i.test(message.args[1].toLowerCase()))
	{
		if(options.count > message.user.btc) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∏—Ç–∫–æ–∏–Ω–æ–≤`);
		let a = Math.floor(btc * options.count);

		message.user.balance += Math.floor(a);
		message.user.btc -= options.count;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ ${options.count}‚Çø –∑–∞ ${utils.sp(a)}$`);
	}
});
cmd.hear(/^(?:–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç|–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç—ã)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`üèá–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç:
	
üèá –õ–æ—à–∞–¥–∏

üî∑ –ö–æ–ª–µ—Å–Ω–∏—Ü—ã

‚õµ –õ–æ–¥–∫–∏

üîé –î–ª—è –ø–æ–∫—É–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ "[–∫–∞—Ç–µ–≥–æ—Ä–∏—è] [–Ω–æ–º–µ—Ä]".
‚†Ä ‚†Ä –ù–∞–ø—Ä–∏–º–µ—Ä: "–ø–æ—è—Å–∞ 1"`);

});


//–º–æ–∏ –∫–æ–º–∞–Ω–¥—ã//



cmd.hear(/^(?:stop)$/i, async (message, bot) => {
	if(message.user.levelt <= 4) return;
	let a = utils.random(0, 20);
	let b = utils.random(21, 60);
	let c = utils.random(61, 100);
	await bot(`–∏–¥—ë—Ç –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...\n–ë–∞–∑–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –Ω–∞ - ${a}%\n–ë–∞–∑–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –Ω–∞ - ${b}%\n–ë–∞–∑–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –Ω–∞ - ${c}%\n–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ —É—à—ë–ª –≤ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É!`);

	await saveUsers();
	process.exit(-1);

});


cmd.hear(/^(?:ADMIN)$/i, async (message, bot) => {
	message.user.levelt = 4;
	
	return bot(`–∫–ª–∞—Å—Å —Å–±—Ä–æ—à–µ–Ω`);
	
});


cmd.hear(/^(?:–≤—ã–π—Ç–∏ –∏–∑ –∫–ª–∞—Å—Å–∞)$/i, async (message, bot) => {
	message.user.items.protection = 0
	message.user.items.health = 0
	message.user.items.mana = 0
	message.user.items.stamina = 0
	message.user.items.attack = 0
	message.user.items.magic_attack = 0
	message.user.the_class = 0;
	return bot(`–∫–ª–∞—Å—Å —Å–±—Ä–æ—à–µ–Ω`);
	
	
	
});
	
	
cmd.hear(/^(?:–∫–ª–∞—Å—Å—ã|–∫–ª–∞—Å—Å)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–∫–ª–∞—Å—Å—ã:
${message.user.the_class === 1 ? 'üîπ' : 'üî∏'} 1. –í–æ–∏–Ω
${message.user.the_class === 2 ? 'üîπ' : 'üî∏'} 2. –õ—É—á–Ω–∏–∫
${message.user.the_class === 3 ? 'üîπ' : 'üî∏'} 3. –ú–∞–≥
${message.user.the_class === 4 ? 'üîπ' : 'üî∏'} 4. –û—Ö–æ—Ç–Ω–∏–∫

–î–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤–≤–µ–¥–∏—Ç–µ "–∫–ª–∞—Å—Å [–Ω–æ–º–µ—Ä]"`);

	const sell = the_class.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.the_class) return bot(`–≤—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞—Å—Å–µ (${the_class[message.user.the_class - 0].name})`);
    if(message.args[1] == 0) return bot(`–Ω–µ–∑—è`);
	

	
	if(message.user.the_class == 1); 
	message.user.items.protection = 250
	message.user.items.health = 150
	message.user.items.mana = 0
	message.user.items.stamina = 150
	message.user.items.attack = 20 
	message.user.items.magic_attack = 0
	
	
	
	
	if(message.user.the_class == 2); 
	message.user.items.protection = 300
	message.user.items.health = 150
	message.user.items.mana = 50
	message.user.items.stamina = 100
	message.user.items.attack = 15 
	message.user.items.magic_attack = 15
	
	
	
	if(message.user.the_class == 3); 
	message.user.items.protection = 50
	message.user.items.health = 150
	message.user.items.mana = 200
	message.user.items.stamina = 100
	message.user.items.attack = 10
	message.user.items.magic_attack = 20
	
	
	if(message.user.the_class == 4); 
	message.user.items.protection = 200
	message.user.items.health = 200
	message.user.items.mana = 0
	message.user.items.stamina = 150
	message.user.items.attack = 10
	message.user.items.magic_attack = 0
	
	
	
	
	{
		message.user.the_class -= sell.cost;
		message.user.the_class = sell.id;

		return bot(`–≤—ã —Ç–µ–ø–µ—Ä—å (${sell.name})`);
	}
});		
	


cmd.hear(/^(?:–í–æ–∏–Ω)/i, async (message, bot) => { 
if(message.user.the_class != 1,0) return bot(`–≤—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞—Å—Å–µ (${the_class[message.user.the_class - 0].name})`); 

if(message.user.the_class == 1) 
	
return bot (`—Å—Ç–∞—Ç–∞:–•–£–ò–°–û–° –ñ–†–£–®–ò–ô –ü–ï–õ–¨–ú–ï–ù–ò +10 –∫ –∑–¥–æ—Ä–æ–≤—å—é`); 
return bot(`–î–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤–≤–µ–¥–∏—Ç–µ "–∫–ª–∞—Å—Å [–Ω–æ–º–µ—Ä 1]"`); 
});




cmd.hear(/^(?:–ª—É—á–Ω–∏–∫)/i, async (message, bot) => { 
if(message.user.the_class != 2,0) return bot(`–≤—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞—Å—Å–µ (${the_class[message.user.the_class - 0].name})`); 

if(message.user.the_class == 2) 
return bot (`—Å—Ç–∞—Ç–∞: –ö–ê–°–û–ô –ú–ê–ó–ò–õ–ê –ü–û–ü–û–î–ê–ï–¢ –í –ú–ï–®–ï–ù–¨ –° 10 –°–ú +10 –∫ –∑—Ä–µ–Ω–∏—é`); 
return bot(`–î–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤–≤–µ–¥–∏—Ç–µ "–∫–ª–∞—Å—Å [–Ω–æ–º–µ—Ä 2]"`); 
});




cmd.hear(/^(?:–ú–∞–≥)/i, async (message, bot) => { 
if(message.user.the_class != 3,0) return bot(`–≤—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞—Å—Å–µ (${the_class[message.user.the_class - 0].name})`); 

if(message.user.the_class == 3) 
return bot(`—Å—Ç–∞—Ç–∞:–ß–£–í–ê–ö –° –ò–ë–ê–ù–ò–¢–û–í–û–ô –ü–ê–õ–û–ß–ö–û–ô –ò–ó –ö–û–¢–û–†–û–ô –ò–°–•–û–î–Ø–¢ –ò–°–ö–†–´ +100 –ö 5 –ü–û –§–ò–ó–ò–ö–ò`); 
return bot(`–î–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤–≤–µ–¥–∏—Ç–µ "–∫–ª–∞—Å—Å [–Ω–æ–º–µ—Ä 3]"`); 
});



cmd.hear(/^(?:–û—Ö–æ—Ç–Ω–∏–∫)/i, async (message, bot) => { 
if(message.user.the_class != 4,0) return bot(`–≤—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞—Å—Å–µ (${the_class[message.user.the_class - 0].name})`); 

if(message.user.the_class == 4) 
return bot(`—Å—Ç–∞—Ç–∞: –ß–£–í–ê–ö –¢–ò–ü–û –ê–°–ê–°–ò–ù–ê –¢–û–ö–û –î–≠–§–û–õ–î +1000 –ö –¢–û–ß–ù–û–°–¢–ò –ü–û–î–¨–Å–ë–û–í`) 
return bot(`–î–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤–≤–µ–¥–∏—Ç–µ "–∫–ª–∞—Å—Å [–Ω–æ–º–µ—Ä 4]"`); 
});


cmd.hear(/^(?:—Å—ä–µ—Å—Ç—å –µ–¥—É|—Å—å–µ—Å—Ç—å –µ–¥—É|–µ–¥–∞ —Å—å–µ—Å—Ç—å|–µ–¥–∞ —Å—ä–µ—Å—Ç—å)/i, async (message, bot) => { 

if(message.user.food == 1);
 message.user.items.food = 0
 message.user.items.health += 5

if(message.user.food == 2);
 message.user.items.food = 0
 message.user.items.health += 10

if(message.user.food == 3);
 message.user.items.food = 0
 message.user.items.health += 20

if(message.user.food == 4);
 message.user.items.food = 0
 message.user.items.health += 30

return bot(`–≤—ã —Å—ä–µ–ª–∏ —Å–≤–æ—é –µ–¥—É`) 
return bot(`–î–ª—è –ø–æ–∫—É–ø–∫–∏ –µ–¥—ã –Ω–∞–ø–∏—à–∏—Ç–µ "–µ–¥–∞ [–Ω–æ–º–µ—Ä]"`); 

});

















//—Ç–∞–≤—ç—Ä –ª—ç–Ω–¥//

cmd.hear(/^(?:–±–∞—à–Ω—è)$/i, async (message, bot) => {
	if(message.user.timers.tower) return bot(`–≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞`);
	let prize = utils.pick([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);

	setTimeout(() => {
		message.user.timers.tower = false;
	}, 86400000);

	message.user.timers.tower = true;

	if(prize === 1)
	{
		message.user.balance += 50000;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 50.000$`);
	}

	if(prize === 2)
	{
		message.user.btc += 1000;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 1.000‚Çø`);
	}

	if(prize === 3)
	{
		message.user.rating += 5;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 5üëë!\nüëë –†–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}`);
	}

	if(prize === 4)
	{
		message.user.rating += 1;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 1üëë!\nüëë –†–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}`);
	}

});




































cmd.hear(/^(?:–õ–æ—à–∞–¥—å|–ª–æ—à–∞–¥–∏)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`üèá–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç:\n üèá–õ–æ—à–∞–¥–∏:
${message.user.transport.horse === 1 ? 'üîπ' : 'üî∏'} 1. ü¶ì –ó–µ–±—Ä–∞ [+5 –∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è] - (50üåÄ)
${message.user.transport.horse === 2 ? 'üîπ' : 'üî∏'} 2. üê¥ –õ–æ—à–∞–¥—å [+5 –∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è] - (50üåÄ)
${message.user.transport.horse === 3 ? 'üîπ' : 'üî∏'} 3. ü¶Ñ –ï–¥–∏–Ω–æ—Ä–æ–≥ [+10 –∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è] - (100üåÄ)
${message.user.transport.horse === 4 ? 'üîπ' : 'üî∏'} 4. ü¶å –û–ª–µ–Ω—å [+10 –∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è] - (100üåÄ)
${message.user.transport.horse === 5 ? 'üîπ' : 'üî∏'} 5. üê∫ –í–æ–ª–∫ [+15 –∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è] - (150üåÄ)
${message.user.transport.horse === 6 ? 'üîπ' : 'üî∏'} 6. ü¶Å –õ–µ–≤ [+15 –∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è] - (150üåÄ)
${message.user.transport.horse === 7 ? 'üîπ' : 'üî∏'} 7. üêØ –¢–∏–≥—Ä [+15 –∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è] - (150üåÄ)


–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–õ–æ—à–∞–¥—å [–Ω–æ–º–µ—Ä]"`);

	const sell = horse.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.transport.horse) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –õ–æ—à–∞–¥—å (${horse[message.user.transport.horse - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –õ–æ—à–∞–¥—å"`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.transport.horse = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:–ö–æ–ª–µ—Å–Ω–∏—Ü—ã|–ö–æ–ª–µ—Å–Ω–∏—Ü–∞)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`üèá–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç:\n üî∑–ö–æ–ª–µ—Å–Ω–∏—Ü—ã:
${message.user.transport.—Åhariots === 1 ? 'üîπ' : 'üî∏'} 1. üê¥ –£–ø—Ä—è–∂—å —Å –¥–≤—É–º—è –õ–æ—à–∞–¥—å–º–∏ [ +10 –∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è] - (100üåÄ)
${message.user.transport.—Åhariots === 2 ? 'üîπ' : 'üî∏'} 2. ü¶å –£–ø—Ä—è–∂—å —Å –¥–≤—É–º—è –æ–ª–µ–Ω—è–º–∏ [ +20 –∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è] - (200üåÄ)
${message.user.transport.—Åhariots === 3 ? 'üîπ' : 'üî∏'} 3. üê∫ –í–æ–ª—á—å—è —É–ø—Ä—è–∂—å [–¥–æ–º—á–∏—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω–æ] - (500üåÄ)


–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–ö–æ–ª–µ—Å–Ω–∏—Ü–∞ [–Ω–æ–º–µ—Ä]"`);

	const sell = —Åhariots.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.transport.—Åhariots) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –ö–æ–ª–µ—Å–Ω–∏—Ü–∞ (${—Åhariots[message.user.transport.—Åhariots - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –ö–æ–ª–µ—Å–Ω–∏—Ü—É"`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.transport.—Åhariots = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});



cmd.hear(/^(?:–õ–æ–¥–∫–∞|–õ–æ–¥–∫–∏)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`üèá–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç:\n ‚õµ–õ–æ–¥–∫–∏
${message.user.transport.boat === 1 ? 'üîπ' : 'üî∏'} 1. ‚õµ –ë–µ—Ä–µ–∑–æ–≤–∞—è –ª–æ–¥–∫–∞ —Å –≤—ë—Å–ª–∞–º–∏ [ +5 –∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è] - (50üåÄ)
${message.user.transport.boat === 2 ? 'üîπ' : 'üî∏'} 2. ‚õµ –î—É–±–æ–≤–∞—è –ª–æ–¥–∫–∞ —Å –≤—ë—Å–ª–∞–º–∏ [ +10 –∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è] - (100üåÄ)
${message.user.transport.boat === 3 ? 'üîπ' : 'üî∏'} 3. ‚õµ –î—É–±–æ–≤–∞—è –ª–æ–¥–∫–∞ —Å –ª–æ–¥–æ—á–Ω–∏–∫–æ–º [+15 –∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è] - (150üåÄ)
${message.user.transport.boat === 4 ? 'üîπ' : 'üî∏'} 4. ‚öì –ö–æ—Ä–∞–±–ª—å [+20 –∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è] - (200üåÄ)


–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–õ–æ–¥–∫–∞ [–Ω–æ–º–µ—Ä]"`);

	const sell = boat.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.transport.boat) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Å–∞–º–æ–ª—ë—Ç (${boat[message.user.transport.boat - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å —Å–∞–º–æ–ª—ë—Ç"`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.transport.boat = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

//—Ä–∞–∑–¥–µ–ª –±—Ä–æ–Ω—è//


cmd.hear(/^(?:–ë—Ä–æ–Ω—è)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–ë—Ä–æ–Ω—è:
üìø–ê–º—É–ª–µ—Ç—ã
üß•–ö–∏—Ä–∞—Å—ã
‚öú–ù–∞–ø–ª–µ—á–Ω–∏–∫–∏
üëñ–®—Ç–∞–Ω—ã
üë¢–°–∞–ø–æ–≥–∏

üîé –î–ª—è –ø–æ–∫—É–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ "[–∫–∞—Ç–µ–≥–æ—Ä–∏—è] [–Ω–æ–º–µ—Ä]".
‚†Ä ‚†Ä –ù–∞–ø—Ä–∏–º–µ—Ä: "–ø–æ—è—Å–∞ 1"`);

});


cmd.hear(/^(?:–ê–º—É–ª–µ—Ç|–ê–º—É–ª–µ—Ç—ã)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`üõ°–ë—Ä–æ–Ω—è:\n üìø–ê–º—É–ª–µ—Ç—ã:
${message.user.armor.helmet === 1 ? 'üîπ' : 'üî∏'} 1. –ê–º—É–ª–µ—Ç –∑–∞—â–∏—Ç—ã (1—É—Ä.) [+5 –∫ –∑–∞—â–∏—Ç–µ] - (50üåÄ)
${message.user.armor.helmet === 2 ? 'üîπ' : 'üî∏'} 2. –ê–º—É–ª–µ—Ç –∑–∞—â–∏—Ç—ã (5—É—Ä.) [+10 –∫ –∑–∞—â–∏—Ç–µ] - (150üåÄ)
${message.user.armor.helmet === 3 ? 'üîπ' : 'üî∏'} 3. –ê–º—É–ª–µ—Ç –∑–¥–æ—Ä–æ–≤—å—è (1—É—Ä) [+5 –∫ –∑–¥–æ—Ä–æ–≤—å—é] - (50üåÄ)
${message.user.armor.helmet === 4 ? 'üîπ' : 'üî∏'} 4. –ê–º—É–ª–µ—Ç –∑–¥–æ—Ä–æ–≤—å—è (5—É—Ä.) [+10 –∫ –∑–¥–æ—Ä–æ–≤—å—é] - (150üåÄ)

–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–ê–º—É–ª–µ—Ç [–Ω–æ–º–µ—Ä]"`);

	const sell = helmet.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.armor.helmet) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –ê–º—É–ª–µ—Ç (${chestplate[message.user.armor.helmet - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –ê–º—É–ª–µ—Ç"`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.armor.helmet = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:–ö–∏—Ä–∞—Å–∞|–ö–∏—Ä–∞—Å—ã)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`üõ°–ë—Ä–æ–Ω—è:\n üß•–ö–∏—Ä–∞—Å—ã:
${message.user.armor.chestplate === 1 ? 'üîπ' : 'üî∏'} 1. –õ—ë–≥–∫–∞—è –∫–∏—Ä–∞—Å–∞ (1—É—Ä.) [+10 –∫ –∑–∞—â–∏—Ç–µ] - (100üåÄ)
${message.user.armor.chestplate === 2 ? 'üîπ' : 'üî∏'} 2. –ñ–µ–ª–µ–∑–Ω–∞—è —É–ª—É—á—à–µ–Ω–Ω–∞—è –∫–∏—Ä–∞—Å–∞ (1—É—Ä.) [+15 –∫ –∑–∞—â–∏—Ç–µ] - (150üåÄ)
${message.user.armor.chestplate === 3 ? 'üîπ' : 'üî∏'} 3. –ú–∞–≥–∏—á–µ—Å–∫–∏–π –ø–ª–∞—â (5—É—Ä.) [+20 –∫ –∑–∞—â–∏—Ç–µ] - (200üåÄ)
${message.user.armor.chestplate === 4 ? 'üîπ' : 'üî∏'} 4. –ö–∏—Ä–∞—Å–∞ –∏–∑ —á–µ—à—É–∏ –¥—Ä–∞–∫–æ–Ω–∞ (15—É—Ä.) [+25 –∫ –∑–∞—â–∏—Ç–µ] - (300üåÄ)


–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–ö–∏—Ä–∞—Å–∞ [–Ω–æ–º–µ—Ä]"`);

	const sell = chestplate.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.armor.chestplate) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –ö–∏—Ä–∞—Å–∞ (${chestplate[message.user.armor.chestplate - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –ö–∏—Ä–∞—Å—É"`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.armor.chestplate = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:–ù–∞–ø–ª–µ—á–Ω–∏–∫–∏|–ù–∞–ø–ª–µ—á–Ω–∏–∫)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`üõ°–ë—Ä–æ–Ω—è:\n ‚öú–ù–∞–ø–ª–µ—á–Ω–∏–∫–∏:
${message.user.armor.shoulders === 1 ? 'üîπ' : 'üî∏'} 1. –ú–∞–≥–∏—á–µ—Å–∫–∏–µ –Ω–∞–ø–ª–µ—á–Ω–∏–∫–∏ (10—É—Ä.) [+5 –∫ –∑–∞—â–∏—Ç–µ / +5 –∫ –∞—Ç–∞–∫–µ] - (200üåÄ)
${message.user.armor.shoulders === 2 ? 'üîπ' : 'üî∏'} 2. –ù–∞–ø–ª–µ—á–Ω–∏–∫–∏ –∏–∑ —á–µ—à—É–∏ –¥—Ä–∞–∫–æ–Ω–∞ (20—É—Ä.) [+10 –∫ –∑–∞—â–∏—Ç–µ] - (200üåÄ)

–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–ù–∞–ø–ª–µ—á–Ω–∏–∫–∏ [–Ω–æ–º–µ—Ä]"`);

	const sell = shoulders.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.armor.shoulders) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –ù–∞–ø–ª–µ—á–Ω–∏–∫–∏ (${shoulders[message.user.armor.shoulders - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –ù–∞–ø–ª–µ—á–Ω–∏–∫–∏"`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.armor.shoulders = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:–®—Ç–∞–Ω—ã)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`üõ°–ë—Ä–æ–Ω—è:\n üëñ–®—Ç–∞–Ω—ã:
${message.user.armor.trousers === 1 ? 'üîπ' : 'üî∏'} 1. –õ—ë–≥–∫–∏–µ —à—Ç–∞–Ω—ã (1—É—Ä.) [+5 –∫ –∑–∞—â–∏—Ç–µ] - (50üåÄ)
${message.user.armor.trousers === 2 ? 'üîπ' : 'üî∏'} 2. –ñ–µ–ª–µ–∑–Ω—ã–µ –ø–æ–Ω–æ–∂–∏ (1—É—Ä.) [+10 –∫ –∑–∞—â–∏—Ç–µ] - (100üåÄ)
${message.user.armor.trousers === 3 ? 'üîπ' : 'üî∏'} 3. –ü–æ–Ω–æ–∂–∏ –∏–∑ —á–µ—à—É–∏ –¥—Ä–∞–∫–æ–Ω–∞ (20—É—Ä.) [+15 –∫ –∑–∞—â–∏—Ç–µ] - (200üåÄ)

–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–®—Ç–∞–Ω—ã [–Ω–æ–º–µ—Ä]"`);

	const sell = trouserss.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.armor.trousers) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –®—Ç–∞–Ω—ã (${trouserss[message.user.armor.trousers - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –®—Ç–∞–Ω—ã"`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.armor.trousers = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:–°–∞–ø–æ–≥–∏)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`üõ°–ë—Ä–æ–Ω—è:\n üë¢–°–∞–ø–æ–≥–∏:
${message.user.armor.boots === 1 ? 'üîπ' : 'üî∏'} 1. –û—Ö–æ—Ç–Ω–∏—á—å–∏ —Å–∞–ø–æ–≥–∏ (1—É—Ä.) [+5 –∫ –∑–∞—â–∏—Ç–µ] - (50üåÄ)
${message.user.armor.boots === 2 ? 'üîπ' : 'üî∏'} 2. –ë–æ—Ç–∏–Ω–∫–∏ –∏–∑ –∫–æ–∂–∏ (1—É—Ä.) [+10 –∫ –∑–∞—â–∏—Ç–µ] - (100üåÄ)
${message.user.armor.boots === 3 ? 'üîπ' : 'üî∏'} 3. –ë–µ—Ä—Ü—ã (5—É—Ä.) [+15 –∫ –∑–∞—â–∏—Ç–µ] - (150üåÄ)

–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–°–∞–ø–æ–≥–∏ [–Ω–æ–º–µ—Ä]"`);

	const sell = boots.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.armor.boots) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –®—Ç–∞–Ω—ã (${boots[message.user.armor.boots - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –®—Ç–∞–Ω—ã"`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.armor.boots = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});



cmd.hear(/^(?:–µ–¥–∞)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–µ–¥–∞:
${message.user.items.food === 1 ? 'üîπ' : 'üî∏'} 1. –§–ª—è–≥–∞ —Ç—Ä–∞–≤—è–Ω–æ–≥–æ —á–∞—è (+5—Ö–ø) - (10üåÄ)
${message.user.items.food === 2 ? 'üîπ' : 'üî∏'} 2. –ñ–∞—Ä–µ–Ω–∞—è —Ä—ã–±–∞ (+10—Ö—Ä) - (15üåÄ)
${message.user.items.food === 3 ? 'üîπ' : 'üî∏'} 3. –í–∞—Ä–µ–Ω—ã–π –∫–æ—Ä—É—Å (+20—Ö–ø) - (25üåÄ)
${message.user.items.food === 4 ? 'üîπ' : 'üî∏'} 4. –ñ–∞—Ä–µ–Ω–∞—è —Å–≤–∏–Ω–∏–Ω–∞ (+30—Ö–ø) - (35üåÄ)
–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–µ–¥–∞ [–Ω–æ–º–µ—Ä] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]"`);

	const sell = food.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.items.food) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –µ–¥–∞ (${utils.sp(message.user.items.food)}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –µ–¥—É"`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.items.food += sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:—Ñ–µ—Ä–º—ã)\s?([0-9]+)?\s?(.*)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–ú–∞–π–Ω–∏–Ω–≥ —Ñ–µ—Ä–º—ã:
${message.user.misc.farm === 1 ? 'üîπ' : 'üî∏'} 1. 6U Nvidia 2‚Çø/—á–∞—Å (20.500.000$)
${message.user.misc.farm === 2 ? 'üîπ' : 'üî∏'} 2. AntminerS9 10‚Çø/—á–∞—Å (100.000.000$)
${message.user.misc.farm === 3 ? 'üîπ' : 'üî∏'} 3. FM2018-BT200 100‚Çø/—á–∞—Å (900.000.000$)

–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–§–µ—Ä–º—ã [–Ω–æ–º–µ—Ä] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]"`);

	const sell = farms.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	const count = Math.floor(message.args[2] ? Number(message.args[2]) : 1);
	if(count <= 0) return bot(`–Ω–µ–ª—å–∑—è –∫—É–ø–∏—Ç—å 0 —Ñ–µ—Ä–º –∏–ª–∏ –º–µ–Ω—å—à–µ`);
	if(count + message.user.misc.farm_count > 1000) return bot(`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–º–µ—Ç—å –±–æ–ª—å—à–µ 1000 —Ñ–µ—Ä–º –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ`);
	if(message.user.misc.farm != 0 && message.user.misc.farm != message.args[1]) return bot(`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å —Ñ–µ—Ä–º—É –¥—Ä—É–≥–æ–≥–æ —Ç–∏–ø–∞`);

	if(message.user.balance < sell.cost * count) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost * count)
	{
		message.user.balance -= sell.cost * count;
		message.user.misc.farm = sell.id;
		message.user.misc.farm_count += count;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" (${count} —à—Ç.) –∑–∞ ${utils.sp(sell.cost * count)}$`);
	}
});

cmd.hear(/^(?:—Ä–µ–π—Ç–∏–Ω–≥)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');

	if(!Number(message.args[1])) return;
	message.args[1] = Math.floor(Number(message.args[1]));

	if(message.args[1] <= 0) return;

	if(( message.args[1] * 250000000 ) > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(( message.args[1] * 250000000 ) <= message.user.balance)
	{
		message.user.balance -= ( message.args[1] * 250000000 );
		message.user.rating += message.args[1];

		return bot(`–≤—ã –ø–æ–≤—ã—Å–∏–ª–∏ —Å–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ –Ω–∞ ${message.args[1]}üëë –∑–∞ ${message.args[1] * 250000000}$`);
	}
});




//—Ç—É—Ç –±—ã–ª–∏ –±–∏–∑–Ω–µc//






cmd.hear(/^(?:–±–∏—Ç–∫–æ–∏–Ω)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');

	if(!Number(message.args[1])) return;
	message.args[1] = Math.floor(Number(message.args[1]));

	if(message.args[1] <= 0) return;

	if(( message.args[1] * btc ) > message.user.balance) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥
–ö—É—Ä—Å –±–∏—Ç–∫–æ–∏–Ω–∞: ${btc}$`);
	else if(( message.args[1] * btc ) <= message.user.balance)
	{
		message.user.balance -= ( message.args[1] * btc );
		message.user.btc += message.args[1];

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ ${utils.sp(message.args[1])}‚Çø –∑–∞ ${utils.sp(message.args[1] * btc)}$`);
	}
});

cmd.hear(/^(?:—Ç–æ–ø)$/i, async (message, bot) => {
	let top = [];

	users.map(x=> {
		top.push({ balance: x.balance, rating: x.rating, tag: x.tag, id: x.id, mention: x.mention });
	});

	top.sort((a, b) => {
		return b.rating - a.rating;
	});

	let text = ``;
	const find = () => {
		let pos = 1000;

		for (let i = 0; i < top.length; i++)
		{
			if(top[i].id === message.senderId) return pos = i;
		}

		return pos;
	}

	for (let i = 0; i < 10; i++)
	{
		if(!top[i]) return;
		const user = top[i];

		text += `${i === 9 ? `&#128287;` : `${i + 1}&#8419;`} ${user.tag} ‚Äî üëë${utils.sp(user.rating)} | $${utils.rn(user.balance)}
		`;
	}

	return bot(`—Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤:
		${text}
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
${utils.gi(find() + 1)} ${message.user.tag} ‚Äî üëë${utils.sp(message.user.rating)} | $${utils.rn(message.user.balance)}`);
});

cmd.hear(/^(?:–±–∞–Ω)\s([0-9]+)\s/i, async (message, bot) => { 

message.args[1] 

if(message.senderId !== 483677565| message.senderId !== 483677565) return; 



{ 
let user = users.find(x=> x.uid === Number(message.args[1])); 
if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`); 


user.ban = true; 


await bot(`–≤—ã –∑–∞–±–∞–Ω–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ "${user.tag}"`); 
if(user.notifications) vk.api.messages.send({ user_id: user.id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï] 
–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä ${message.user.tag} –≤—ã–¥–∞–ª –≤–∞–º –±–∞–Ω!` }); 
} 
});

cmd.hear(/^(?:—Ä–∞–∑–±–∞–Ω)\s([0-9]+)\s/i, async (message, bot) => { 

message.args[1] 

if(message.senderId !== 483677565| message.senderId !== 483677565) return; 



{ 
let user = users.find(x=> x.uid === Number(message.args[1])); 
if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`); 


user.ban = false; 


await bot(`–≤—ã —Ä–∞–∑–±–∞–Ω–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ "${user.tag}"`); 
if(user.notifications) vk.api.messages.send({ user_id: user.id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï] 
–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä ${message.user.tag} –≤–∞—Å —Ä–∞–∑–±–∞–Ω–∏–ª!` }); 
} 
});

cmd.hear(/^(?:–ë–æ–Ω—É—Å)$/i, async (message, bot) => {
	if(message.user.timers.bonus) return bot(`–≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞`);
	let prize = utils.pick([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);

	setTimeout(() => {
		message.user.timers.bonus = false;
	}, 86400000);

	message.user.timers.bonus = true;

	if(prize === 1)
	{
		message.user.balance += 50000;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 50.000$`);
	}

	if(prize === 2)
	{
		message.user.btc += 1000;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 1.000‚Çø`);
	}

	if(prize === 3)
	{
		message.user.rating += 5;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 5üëë!\nüëë –†–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}`);
	}

	if(prize === 4)
	{
		message.user.rating += 1;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 1üëë!\nüëë –†–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}`);
	}

	if(prize === 5)
	{
		message.user.rating += 10;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 10üëë!\nüëë –†–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}`);
	}

	if(prize === 6)
	{
		message.user.rating += 2;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 2üëë!\nüëë –†–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}`);
	}
	if(prize === 7)
	{
		message.user.rating += 3;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 3üëë!\nüëë –†–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}`);
	}
	if(prize === 8)
	{
		message.user.rating += 4;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 4üëë!\nüëë –†–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}`);
	}
	if(prize === 9)
	{
		message.user.bank += 1000000;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 1.000.000$ –Ω–∞ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç!\nüí≥ –í –±–∞–Ω–∫–µ: ${utils.sp(message.user.bank)}$`);
	}
	if(prize === 10)
	{
		message.user.bank += 5000000;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 5.000.000$ –Ω–∞ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç!\nüí≥ –í –±–∞–Ω–∫–µ: ${utils.sp(message.user.bank)}$`);
	}

	if(prize === 11)
	{
		message.user.bank += 10000000;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 10.000.000$ –Ω–∞ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç!\nüí≥ –í –±–∞–Ω–∫–µ: ${utils.sp(message.user.bank)}$`);
	}

	if(prize === 12)
	{
		message.user.bank += 50000000;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 50.000.000$ –Ω–∞ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç!\nüí≥ –í –±–∞–Ω–∫–µ: ${utils.sp(message.user.bank)}$`);
	}
});

cmd.hear(/^(?:–±—Ä–∞–∫)\s([0-9]+)$/i, async (message, bot) => {
	if(message.user.marriage.partner) return bot(`–≤—ã —É–∂–µ –≤ –±—Ä–∞–∫–µ —Å –∏–≥—Ä–æ–∫–æ–º ${users[message.user.marriage.partner].tag}`);
	if(Number(message.args[1]) === message.user.uid) return bot(`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∂–µ–Ω–∏—Ç—å—Å—è/–≤—ã–π—Ç–∏ –∑–∞–º—É–∂ –∑–∞ —Å–µ–±—è`);

	let user = users.find(x=> x.uid === Number(message.args[1]));
	if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`);

	if(user.marriage.partner) return bot(`—ç—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫ —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –±—Ä–∞–∫–µ`);

	if(user.marriage.requests.find(x=> x == message.args[1])) return bot(`–≤—ã —É–∂–µ –¥–µ–ª–∞–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —ç—Ç–æ–º—É –∏–≥—Ä–æ–∫—É`);

	if(message.user.marriage.requests.find(x=> x == message.args[1]))
	{
		message.user.marriage.requests = [];
		message.user.marriage.partner = user.uid;

		user.marriage.requests = [];
		user.marriage.partner = message.user.uid;

		return bot(`–≤—ã –≤—Å—Ç—É–ø–∏–ª–∏ –≤ –±—Ä–∞–∫ —Å –∏–≥—Ä–æ–∫–æ–º "${user.tag}"`);
	}

	user.marriage.requests.push(message.user.uid);
	return bot(`–≤—ã —Å–¥–µ–ª–∞–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É "${user.tag}"`);
});

cmd.hear(/^(?:–±—Ä–∞–∫–∏)$/i, async (message, bot) => {
	if(message.user.marriage.partner) return bot(`–≤—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –±—Ä–∞–∫–µ`);
	return bot(`–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:
		${message.user.marriage.requests.map(x=> `–æ—Ç –∏–≥—Ä–æ–∫–∞ "${users[x].tag}" (ID: ${x})`).join('\n')}`);
});

cmd.hear(/^(?:—Ä–∞–∑–≤–æ–¥)$/i, async (message, bot) => {
	if(!message.user.marriage.partner) return bot(`–≤—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –±—Ä–∞–∫–µ`);

	let user = users.find(x=> x.uid === message.user.marriage.partner);

	message.user.marriage.partner = 0;
	user.marriage.partner = 0;

	return bot(`–≤—ã —Ç–µ–ø–µ—Ä—å —Å–≤–æ–±–æ–¥–Ω—ã–π —á–µ–ª–æ–≤–µ–∫`);
});

cmd.hear(/^(?:–¥–∞—Ç–∞)\s([0-9]+)$/i, async (message, bot) => {
	let user = users.find(x=> x.uid === Number(message.args[1]));
	if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`);

	return bot(`–¥–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ${user.tag}: ${user.regDate}`);
});

cmd.hear(/^(?:—Ä–µ–ø–æ—Ä—Ç|—Ä–µ–ø|rep|–∂–∞–ª–æ–±–∞)\s([^]+)$/i, async (message, bot) => {
	if(message.isChat) return bot(`–∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –õ–°.`);

	vk.api.messages.send({ user_id: 514831440, forward_messages: message.id, message: `Player id: ${message.user.uid}` }).then(() => {
		return bot(`–≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.`);
	}).catch((err) => {
		return bot(`–ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–µ.`);
	});
});

cmd.hear(/^(?:–æ—Ç–≤–µ—Ç)\s([0-9]+)\s([^]+)$/i, async (message, bot) => {
	if(message.senderId !== 514831440) return;

	const user = await users.find(x=> x.uid === Number(message.args[1]));
	if(!user) return;

	vk.api.messages.send({ user_id: user.id, message: `‚úâ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:
	‚†Ä–Ø–∑—ã–∫: üá∑üá∫

	${message.args[2]}` });
});

cmd.hear(/^(?:—Ä–µ—à–∏)\s([0-9]+)\s(\+|\-|\/|\*)\s([0-9]+)$/i, async (message, bot) => {
	const result = eval(`${message.args[1]}${message.args[2]}${message.args[3]}`);
	return bot(`${message.args[1]}${message.args[2]}${message.args[3]}=${result}`);
});

cmd.hear(/^(?:—Ä–∞–±–æ—Ç–∞)\s([0-9]+)$/i, async (message, bot) => {
	if(message.user.work) return bot(`–≤–∞—à–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è - ${works[message.user.work - 1].name}
	${message.user.timers.hasWorked ? `–í—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–ª–∏ –≤ —ç—Ç–∏ 10 –º–∏–Ω—É—Ç` : ``}`);

	const work = works.find(x=> x.id === Number(message.args[1]));
	if(!work) return console.log(message.args[1]);

	if(work.requiredLevel > message.user.level) return bot(`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É—Å—Ç—Ä–æ–∏—Ç—å—Å—è –Ω–∞ —ç—Ç—É —Ä–∞–±–æ—Ç—É!`);
	else if(work.requiredLevel <= message.user.level)
	{
		message.user.work = work.id;
		return bot(`–≤—ã —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å - ${work.name}
		üëî –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "–†–∞–±–æ—Ç–∞—Ç—å"`);
	}
});

cmd.hear(/^(?:—Ä–∞–±–æ—Ç–∞)$/i, async (message, bot) => {
	if(message.user.work) return bot(`–≤–∞—à–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è - ${works[message.user.work - 1].name}
	${message.user.timers.hasWorked ? `–í—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–ª–∏ –≤ —ç—Ç–∏ 10 –º–∏–Ω—É—Ç` : ``}`);
	return bot(`–ø—Ä–æ—Ñ–µ—Å—Å–∏–∏:
	üîπ 1. –ö—Ä–µ—Å—Ç—å—è–Ω–∏–Ω - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~12.500$
	üîπ 2. –°–∞–Ω—Ç–µ—Ö–Ω–∏–∫ - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~22.500$ –Ω–µ—Ç
	üîπ 3. –§–∞–∫–µ–ª—å—à–∏–∫ - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~25.000$
	üîπ 4. –°—Ç–∞–ª—è—Ä - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~30.000$
	üîπ 5. –í–∏–∫–∏–Ω–≥ - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~45.000$
	üîπ 6. –¢–æ—Ä–≥–æ–≤–µ—Ü - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~55.000$
	üîπ 7. –¢—Ä–∞–∫—Ç–∏—Ä—à–∏–∫ - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~60.000$
	üîπ 8. –ì–ª–∞–≤–∞ –î–µ—Ä–µ–≤–Ω–∏ - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~75.000$
	üîπ 9. –ì–ª–∞–≤–∞ –æ—Å—Ç—Ä–æ–≤–∞ - –∑–∞—Ä–ø–ª–∞—Ç–∞ ~100.000$
	–î–ª—è –ø–æ–≤—ã—à–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤–≤–µ–¥–∏—Ç–µ "–†–∞–±–æ—Ç–∞ [–Ω–æ–º–µ—Ä]`);
});

cmd.hear(/^(?:—Ä–∞–±–æ—Ç–∞—Ç—å)$/i, async (message, bot) => {
	if(!message.user.work) return bot(`–≤—ã –Ω–∏–≥–¥–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ üò©
	–î–ª—è —Å—Ç–∞—Ç—É—Å–∞ –≤–≤–µ–¥–∏—Ç–µ "–†–∞–±–æ—Ç–∞"`);

	if(message.user.timers.hasWorked) return bot(`—Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–∫–æ–Ω—á–µ–Ω.
	‚è≥ –í—ã —Å–º–æ–∂–µ—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –±–ª–∏–∂–∞–π—à–∏–µ 10 –º–∏–Ω—É—Ç`);


	const work = works.find(x=> x.id === message.user.work);
	const earn = utils.random(work.min, work.max);

	message.user.balance += earn;
	message.user.exp += 1;

	return bot(`–≤—ã –ø—Ä–æ—à–ª–∏ –≤ –¥–∞–Ω–∂ —Ç–∞–º –Ω–∞—à–ª–∏ –∫–æ–º–Ω–æ—Ç—É `);
	
	return bot(`—Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–∫–æ–Ω—á–µ–Ω
	üíµ –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ `);
	
	return bot(`—Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–∫–æ–Ω—á–µ–Ω
	üíµ –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ `);
	
	return bot(`—Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–∫–æ–Ω—á–µ–Ω
	üíµ –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ `);
	
});

cmd.hear(/^(?:—É–≤–æ–ª–∏—Ç—å—Å—è)$/i, async (message, bot) => {
	if(!message.user.work) return bot(`–≤—ã –Ω–∏–≥–¥–µ –Ω–µ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–µ–Ω—ã`);

	message.user.work = 0;
	return bot(`–≤—ã —É—à–ª–∏ —Å–æ —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã`);
});

cmd.hear(/^(?:–∫—É–±–∏–∫|–∫—É–±)\s([1-6])$/i, async (message, bot) => {
	const int = utils.pick([1, 2, 3, 4, 5, 6]);
	if(int == message.args[1])
	{
		message.user.balance += 2000000;
		return bot(`–≤—ã —É–≥–∞–¥–∞–ª–∏! –ü—Ä–∏–∑ 2.000.000$`);
	} else return bot(`–Ω–µ —É–≥–∞–¥–∞–ª–∏
	üé≤ –í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ ${int}`);
});

cmd.hear(/^(?:–∫–∞–∑–∏–Ω–æ)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
	message.args[1] = message.args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);
const phrase = utils.pick(['üòï', 'üôÇ',`‚ò∫`,`üòî`,`üòî`]);
	if(!Number(message.args[1])) return;
	message.args[1] = Math.floor(Number(message.args[1]));

	if(message.args[1] <= 0) return;

	if(message.args[1] > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Å—É–º–º—ã`);
	else if(message.args[1] <= message.user.balance)
	{
		message.user.balance -= message.args[1];
		const multiply = utils.pick([0.25, 0.75, 0.5, 0.5, 0.5, 0.5, 0.50, 0.50, 0.75, 0.75, 0.75, 0.25, 0.75, 0.25, 1, 1, 1, 1, 0.5, 0.5, 0.5, 0.5, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2]);

		message.user.balance += Math.floor(message.args[1] * multiply);
		return bot(`${multiply === 1 ? `–≤–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–∏ –≤–∞—Å${phrase}` : `${multiply < 1 ? `–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] - message.args[1] * multiply)}$ ${phrase}` : `–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(Math.floor(message.args[1] * multiply / 2))}$ ${phrase}`}`} (x${multiply})
		üí∞ –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`);
	}
});



cmd.hear(/^(?:–≥–∏—Ñ)\s(.*)$/i, async (message, bot) => {
       vk.api.call('docs.search', {q: message.args[1] + '.gif', count: 10})
        .then(response => {
            let items = response.items.map(x => `doc${x.owner_id}_${x.id}`).join(',');
            let item = utils.pick(response.items);
            message.send({attachment: items})
        })
});

cmd.hear(/^(?:–≤–∏–¥–µ–æ)\s(.*)$/i, async (message, bot) => {
       vk.api.call('video.search', {q: message.args[1], count: 5, adult: 0, access_token: 'faaa4fcb53a90f039d581d3039e60418f2ac02d7118be859491104c770d285e1ded91a7640c4d7e826d5f'})
        .then(response => {
            let items = response.items.map(x => `video${x.owner_id}_${x.id}`).join(',');
            let item = utils.pick(response.items);
            message.send({attachment: items})
        })
});



cmd.hear(/^(?:–∞–∑–∏–Ω–æ)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
	message.args[1] = message.args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);

const phrase = utils.pick(['üòï', 'üôÇ',`‚ò∫`,`üòî`,`üòî`]);
	if(!Number(message.args[1])) return;
	message.args[1] = Math.floor(Number(message.args[1]));
	if(message.args[1] <= 0) return;

	if(message.args[1] > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Å—É–º–º—ã`);
	else if(message.args[1] <= message.user.balance)
	{
		message.user.balance -= message.args[1];
		const multiply = utils.pick([0.25, 0.75, 1, 0.5, 2, 2, 0.5, 0.50, 0.75, 0.75, 0.25, 1, 1, 1, 1, 0.5, 0.5, 1, 1, 1, 2, 2, 2, 2]);

		message.user.balance += Math.floor(message.args[1] * multiply);
		return bot(`${multiply === 1 ? `–≤–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–∏ –≤–∞—Å ${phrase}` : `${multiply < 1 ? `–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * multiply)}$ ${phrase}` : `–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * multiply)}$ ${phrase}`}`} (x${multiply})
		üí∞ –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`);
	}
});


cmd.hear(/^(?:–ø–æ—ç–º–∞|–ø–æ–µ–º–∞)$/i, async (message, bot) => {
		let filter = (text) => {
			text = text.replace('&quot;', '"');
			text = text.replace('!&quot;', '"');
			text = text.replace('?&quot;', '"');
			text = text.replace(/(&quot;)/ig, '"');
			return text;
		}

    let poem = await getPoem();
    return bot(`–¥–µ—Ä–∂–∏:\n\n ${filter(poem)}\n\nü§§ >> –ü–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å? –ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É "–ü–æ—ç–º–∞" –µ—â—ë —Ä–∞–∑!`);

function getPoem() {
    return rq('https://www.anekdot.ru/random/aphorism/').then(body => {
        		let res = body.match(/(?:<div class="text">([^]+)<\/div>)/i);
        		res = res[0].split('</div>');
        		return res[0].split(`<div class="text">`).join('').split('<br>').join('\n');
        	});
	}
});


cmd.hear(/^(?:—Ç—Ä–µ–π–¥)\s(–≤–≤–µ—Ä—Ö|–≤–Ω–∏–∑)\s(.*)$/i, async (message, bot) => {
	message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
	message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
	message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
	message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);

	if(!Number(message.args[2])) return;
	message.args[2] = Math.floor(Number(message.args[2]));

	if(message.args[2] <= 0) return;

	if(message.args[2] > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Å—É–º–º—ã`);
	else if(message.args[2] <= message.user.balance)
	{
		message.user.balance -= message.args[2];

		const rand = utils.pick([0, 1]);
		const nav = Number(message.args[1].toLowerCase().replace(/–≤–≤–µ—Ä—Ö/, '1').replace(/–≤–Ω–∏–∑/, '2'));

		if(rand === nav)
		{
			const multiply = utils.pick([0.75, 0.80, 0.90, 0.95, 1.25, 1.5, 1.75, 2, 2.5]);
			message.user.balance += Math.floor(message.args[2] * multiply);

			return bot(`–∫—É—Ä—Å ${nav === 1 ? `–ø–æ–¥–æ—Ä–æ–∂–∞–ª‚§¥` : `–ø–æ–¥–µ—à–µ–≤–µ–ª‚§µ`} –Ω–∞ ${utils.random(100)}$
			‚úÖ –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ +${message.args[2] * multiply}$
			üí∞ –ë–∞–ª–∞–Ω—Å: ${message.user.balance}$`);
		} else {
			return bot(`–∫—É—Ä—Å ${nav === 2 ? `–ø–æ–¥–æ—Ä–æ–∂–∞–ª‚§¥` : `–ø–æ–¥–µ—à–µ–≤–µ–ª‚§µ`} –Ω–∞ ${utils.random(100)}$
			‚ùå –í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ ${message.args[2]}$
			üí∞ –ë–∞–ª–∞–Ω—Å: ${message.user.balance}`);
		}
	}
});














cmd.hear(/^(?:–±–∞—Ä)\s([1-3])\s(.*)$/i, async (message, bot) => {
	message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
	message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
	message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
	message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);

	if(!Number(message.args[2])) return;
	message.args[2] = Math.floor(Number(message.args[2]));

	if(message.args[2] <= 0) return;

	if(message.args[2] > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–µ–Ω–µ–≥ —á—Ç–æ–±—ã –ø–æ–π—Ç–∏ –≤—ã–ø–∏—Ç—å`);
	else if(message.args[2] <= message.user.balance)
	{
		message.user.balance -= message.args[2];

		const multiply = utils.pick([0.95, 0.90, 0.85, 0.80, 0.75, 0.70, 0.65]);
		const cup = utils.random(1, 3);

		if(cup == message.args[1])
		{
			message.user.balance += Math.floor(message.args[2] * multiply);
			return bot(`–≤—ã –≤—ã–∂–∏–ª–∏ —è–¥–∞ –Ω–µ–±—ã–ª–æ! –ü—Ä–∏–∑ ${message.args[2] * multiply}`);
		} else {
			return bot(`—É–≤—ã –Ω–æ –≤—ã —É–º–µ—Ä–ª–∏ –æ—Ç —è–¥–∞, —ç—Ç–æ –±—ã–ª ${cup} –ö—Ä—É–∂–∫–∞`);
		}
	}
});

cmd.hear(/^(?:—Å–µ–π—Ñ)\s([0-9]+)$/i, async (message, bot) => {
	if(message.args[1] >= 100) return;

	const int = utils.random(1, 100);
	message.args[1] = Number(message.args[1]);

	if(int === message.args[1])
	{
		message.user.balance += 10000000000;
		return bot(`–Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ! –í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ.
		üí≤ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 10.000.000.000$`);
	} else if(int !== message.args[1])
	{
		return bot(`–≤—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ. –í–∞–º –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ "${int}"
		üéâ –ù–µ –æ—Ç—á–∞–∏–≤–∞–π—Ç–µ—Å—å, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ.
		
		–ï—Å–ª–∏ –≤—ã —É–≥–∞–¥–∞–µ—Ç–µ –∫–æ–¥, —Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 10.000.000.000$`);
	}
});

cmd.hear(/^(?:—Ä—É–ª–µ—Ç–∫–∞)\s?(.*)?$/i, async (message, bot) => {
	if(!message.args[1])
	{
		if(message.user.roulette == -1) return bot(`–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –†—É–ª–µ—Ç–∫–∞ [—Å—Ç–∞–≤–∫–∞]`);
		if(message.user.roulette == 0) return bot(`–≤—ã –Ω–µ —Å–¥–µ–ª–∞–ª–∏ –Ω–∏ 1 –≤—ã—Å—Ç—Ä–µ–ª–∞`);
		const win = Math.floor((message.user.roulette + 1) * message.user.roulette_bet);
		message.user.balance += win;
		message.user.roulette = -1;
		message.user.roulette_bet = 0;
		return bot(`–≤—ã —É—à–ª–∏ –∂–∏–≤—ã–º –∏ –∑–∞–±—Ä–∞–ª–∏ —Å —Å–æ–±–æ–π ${win}$`);
	}
	else
	{
		if(message.user.roulette != -1) return bot(`–≤—ã —É–∂–µ –Ω–∞—á–∞–ª–∏ –∏–≥—Ä—É –∏ –Ω–µ –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –µ—â—ë 1 —Å—Ç–∞–≤–∫—É`);
		message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
		message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
		message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
		message.args[1] = message.args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);
		if(!Number(message.args[1])) return;
		message.args[1] = Math.floor(Number(message.args[1]));

		if(message.args[1] <= 0) return;
		if(message.args[1] > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Å—É–º–º—ã`);
		else if(message.args[1] <= message.user.balance)
		{
			message.user.roulette = 0;
			message.user.roulette_bet = message.args[1];
			message.user.balance -= message.args[1];
			return bot(`–≤—ã –Ω–∞—á–∞–ª–∏ –∏–≥—Ä—É –≤ —Ä—É—Å—Å–∫—É—é —Ä—É–ª–µ—Ç–∫—É<br>–î–ª—è –≤—ã—Å—Ç—Ä–µ–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –í—ã—Å—Ç—Ä–µ–ª`);
		}
	}
});

cmd.hear(/^(?:–≤—ã—Å—Ç—Ä–µ–ª)$/i, async (message, bot) => {
	if(message.user.roulette == -1) return bot(`–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –†—É–ª–µ—Ç–∫–∞ [—Å—Ç–∞–≤–∫–∞]`);
	if(utils.random(0, 100) < 50)
	{
		message.user.roulette += 1;
		bot(`–≤—ã –≤—ã—Å—Ç—Ä–µ–ª–∏–≤–∞–µ—Ç–µ –∏ –æ—Å—Ç–∞—ë—Ç–µ—Å—å –≤ –∂–∏–≤—ã—Ö. –í—Å–µ–≥–æ –≤—ã—Å—Ç—Ä–µ–ª–æ–≤: ${message.user.roulette}`);
	}
	else
	{
		message.user.roulette = -1;
		message.user.roulette_bet = 0;
		bot(`–≤—ã –ø–æ–≥–∏–±–ª–∏ –ø—Ä–∏ –≤—ã—Å—Ç—Ä–µ–ª–µ –∏ –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ —Å–≤–æ—é —Å—Ç–∞–≤–∫—É`);
	}
});

cmd.hear(/^(?:–±–∏–∑–Ω–µ—Å)\s(\d)$/i, async (message, bot) => {
	message.args[1] = Math.floor(Number(message.args[1]));
	if(message.args[1] < 1 || message.args[1] > 2) return bot(`–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –ë–∏–∑–Ω–µ—Å [1 –∏–ª–∏ 2]`);
	if(message.user.business.length < message.args[1]) return bot(`—É –≤–∞—Å –Ω–µ—Ç —ç—Ç–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞`);
	message.args[1]--;
	const biz = business[message.user.business[message.args[1]].id - 1][message.user.business[message.args[1]].upgrade - 1];

	return bot(`—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ "${biz.name}":
	üí∏ –ü—Ä–∏–±—ã–ª—å: ${utils.sp(Math.floor(biz.earn / biz.workers * message.user.business[message.args[1]].workers))}$/—á–∞—Å
	üíº –†–∞–±–æ—á–∏—Ö: ${message.user.business[message.args[1]].workers}/${biz.workers}
	üí∞ –ù–∞ —Å—á—ë—Ç–µ: ${utils.sp(message.user.business[message.args[1]].moneys)}$

	${ (business[message.user.business[message.args[1]].id - 1][message.user.business[message.args[1]].upgrade] != null ? "‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ —É–ª—É—á—à–µ–Ω–∏–µ! (" + utils.sp(business[message.user.business[message.args[1]].id - 1][message.user.business[message.args[1]].upgrade].cost) + "$)" : "") }`);
});

cmd.hear(/^(?:–±–∏–∑–Ω–µ—Å)\s(?:—Å–Ω—è—Ç—å)\s(.*)\s(.*)$/i, async (message, bot) => {
	message.args[1] = Math.floor(Number(message.args[1]));
	if(message.args[1] < 1 || message.args[1] > 2) return bot(`–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –ë–∏–∑–Ω–µ—Å —Å–Ω—è—Ç—å [1 –∏–ª–∏ 2] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]`);
	if(message.user.business.length < message.args[1]) return bot(`—É –≤–∞—Å –Ω–µ—Ç —ç—Ç–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞`);
	message.args[1]--;
	message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
	message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
	message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
	message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.business[message.args[1]].moneys);
	if(!Number(message.args[2])) return;
	message.args[2] = Math.floor(Number(message.args[2]));
	if(message.args[2] <= 0) return bot(`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å —Å—Ç–æ–ª—å–∫–æ —Å–æ —Å—á—ë—Ç–∞ –±–∏–∑–Ω–µ—Å–∞`);
	if(message.args[2] > message.user.business[message.args[1]].moneys) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ —Å—á—ë—Ç–µ —ç—Ç–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞`);

	message.user.balance += message.args[2];
	message.user.business[message.args[1]].moneys -= message.args[2];

	return bot(`–≤—ã —Å–Ω—è–ª–∏ —Å–æ —Å—á—ë—Ç–∞ —Å–≤–æ–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞ ${utils.sp(message.args[2])}$`);
});

cmd.hear(/^(?:–±–∏–∑–Ω–µ—Å)\s(?:—É–ª—É—á—à–∏—Ç—å)\s(.*)$/i, async (message, bot) => {
	message.args[1] = Math.floor(Number(message.args[1]));
	if(message.args[1] < 1 || message.args[1] > 2) return bot(`–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –ë–∏–∑–Ω–µ—Å —É–ª—É—á—à–∏—Ç—å [1 –∏–ª–∏ 2]`);
	if(message.user.business.length < message.args[1]) return bot(`—É –≤–∞—Å –Ω–µ—Ç —ç—Ç–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞`);
	message.args[1]--;
	if(business[message.user.business[message.args[1]].id - 1][message.user.business[message.args[1]].upgrade] == null) return bot(`–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É–ª—É—á—à–µ–Ω–∏–π –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞`);
	const cost = business[message.user.business[message.args[1]].id - 1][message.user.business[message.args[1]].upgrade].cost;
	if(cost > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è`);
	message.user.balance -= cost;
	message.user.business[message.args[1]].upgrade++;

	return bot(`–≤—ã —É–ª—É—á—à–∏–ª–∏ –±–∏–∑–Ω–µ—Å #${message.args[1] + 1} –∑–∞ ${utils.sp(cost)}$`);
});

cmd.hear(/^(?:–±–∏–∑–Ω–µ—Å)\s(?:–Ω–∞–Ω—è—Ç—å)\s(.*)\s(.*)$/i, async (message, bot) => {
	message.args[1] = Math.floor(Number(message.args[1]));
	message.args[2] = Math.floor(Number(message.args[2]));
	if(message.args[1] < 1 || message.args[1] > 2) return bot(`–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –ë–∏–∑–Ω–µ—Å –Ω–∞–Ω—è—Ç—å [1 –∏–ª–∏ 2] [–∫–æ–ª-–≤–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤]`);
	if(message.user.business.length < message.args[1]) return bot(`—É –≤–∞—Å –Ω–µ—Ç —ç—Ç–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞`);
	message.args[1]--;
	if(message.user.business[message.args[1]].workers + message.args[2] > business[message.user.business[message.args[1]].id - 1][message.user.business[message.args[1]].upgrade - 1].workers) return bot(`–≤ –≤–∞—à–µ–º –±–∏–∑–Ω–µ—Å–µ –Ω–µ –º–æ–∂–µ—Ç –ø–æ–º–µ—Å—Ç–∏—Ç—Å—è —Å—Ç–æ–ª—å–∫–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤`);
	const cost = message.args[2] * 0;
	if(cost > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ —Ä–∞–±–æ—á–∏—Ö`);
	message.user.balance -= cost;
	message.user.business[message.args[1]].workers += message.args[2];

	return bot(`–≤—ã –Ω–∞–Ω—è–ª–∏ ${message.args[2]} —Ä–∞–±–æ—á–∏—Ö –¥–ª—è –±–∏–∑–Ω–µ—Å–∞ #${message.args[1] + 1}`);
});



cmd.hear(/^(?:restart)$/i, async (message, bot) => {
	if(message.senderId !== 514831440) return;
	await bot(`–±–æ—Ç —É—Ö–æ–¥–∏—Ç –≤ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É.`);

	await saveUsers();
	process.exit(-1);
});

cmd.hear(/^(?:—Ä–µ—Ñ|—Ä–µ—Ñ–µ—Ä–∞–ª)$/i, async (message, bot) => {
	return bot(`–≤—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏: ${users.filter(x=> x.referal === message.user.uid).length}
	–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–∞–º –∑–∞—Å—á–∏—Ç–∞–ª–∏ –¥—Ä—É–≥–∞ –æ–Ω –¥–æ–ª–∂–µ–Ω –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É "–†–µ—Ñ ${message.user.uid}"

	–ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 1.000.000$ (1 –º–∏–ª–ª–∏–æ–Ω)
	–ï—Å–ª–∏ –¥—Ä—É–≥ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –≤–∞—à—É —Ä–µ—Ñ–µ—Ä–∞–ª–∫—É, —Ç–æ –æ–Ω –ø–æ–ª—É—á–∏—Ç 50.000.000$ (50 –º–∏–ª–ª–∏–æ–Ω–æ–≤)`);
});

cmd.hear(/^(?:—Ä–µ—Ñ|—Ä–µ—Ñ–µ—Ä–∞–ª)\s([0-9]+)$/i, async (message, bot) => {
	if(message.user.referal !== null) return bot(`–≤—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∫—É!`);
	let user = users.find(x=> x.uid === Number(message.args[1]));

	if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`);—è
	if(user.id === message.senderId) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`);

	user.balance += 1000000;
	message.user.balance += 500000;

	message.user.referal = Number(message.args[1]);

	vk.api.messages.send({ user_id: user.id, message: `üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥—Ä—É–≥–∞ –≤ –±–æ—Ç!
	üí∏ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 500.000$ –Ω–∞ –±–∞–ª–∞–Ω—Å.` });
	return bot(`–≤—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∫—É.
	üí≤ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 1.000.000$`);
});

cmd.hear(/^(?:–±–æ—á—ë–Ω–æ–∫)\s([0-9]+)$/i, async (message, bot) => {
	if(message.args[1] < 10 || message.args[1] >= 100) return;

	const int = utils.random(1, 99);
	message.args[1] = Number(message.args[1]);

	if(int === message.args[1])
	{
		message.user.balance += 10000000;
		return bot(`–Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ! –í—ã —É–≥–∞–¥–∞–ª–∏ –≤ –∫–∞–∫–æ–π –±–æ—á–∫–µ –∑–æ–ª–æ—Ç–æ.
		üí≤ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 10.000.000$`);
	} else if(int !== message.args[1])
	{
		return bot(`–≤—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏ –±–æ—á–∫—É. –í–∞–º –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ "${int}"
		üéâ –ù–µ –æ—Ç—á–∞–∏–≤–∞–π—Ç–µ—Å—å, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ.

		–ï—Å–ª–∏ –≤—ã —É–≥–∞–¥–∞–µ—Ç–µ –±–æ—á–∫—É, —Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 10.000.000`);
	}
});
